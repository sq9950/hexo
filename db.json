{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"223cc4d0310e445cb8088a58e786fe883432eaf7","modified":1504927196000},{"_id":"source/404.html","hash":"909a2b39bf012a9bb70865f9ba4569a08b165adb","modified":1504927069000},{"_id":"source/CNAME","hash":"44e9d0b709629914396104dd7d94975fb35266f9","modified":1504927069000},{"_id":"source/favicon.ico","hash":"4eda7c0f3a36181f483dd0a14efe9f58c8b29814","modified":1504927069000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1513416541135},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1513416541135},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1513416541135},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1513416541136},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1513416541136},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1513416541137},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1513416541137},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1513416541137},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1513416541137},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1513416541137},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1513416541137},{"_id":"themes/next/README.md","hash":"aa2fb15ef016074b10755323c99025df506d5ca3","modified":1513416541138},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1513416541138},{"_id":"themes/next/_config.yml","hash":"a2d9bda028f4d30270de8b4020ae01c3a3bd162d","modified":1513419713025},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1513416541138},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1513416541165},{"_id":"source/_posts/hello-world.md","hash":"55e41ce14eabfaaff6bf9fb8623f91887a8b2ea7","modified":1504927069000},{"_id":"source/_posts/sublime安装packageControl.md","hash":"9c0553c94d2564c8dff2fa169068a2afd433beb3","modified":1504927069000},{"_id":"source/tags/index.md","hash":"01650f4965534a5ec49f82d093133dad91c24797","modified":1504927069000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1513416541128},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1513416541131},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1513416512263},{"_id":"themes/next/.git/index","hash":"5331698eba95edf540fcf49d3dbf302ce8edfb3a","modified":1513418404213},{"_id":"themes/next/.git/packed-refs","hash":"f4d7e4a6f59a2abdcdcdd1733b89d4d72e9136d6","modified":1513416541125},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1513416541136},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1513416541136},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1513416541136},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1513416541136},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1513416541139},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1513416541139},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1513416541139},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1513416541139},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1513416541139},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1513416541139},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1513416541140},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1513416541140},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1513416541140},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1513416541140},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1513416541140},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1513416541140},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1513416541141},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1513416541141},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1513416541141},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1513416541141},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1513416541142},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1513416541163},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1513416541164},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1513416541164},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1513416541164},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1513416541164},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1513416541165},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1513416541165},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1513416541165},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1513416541166},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1513416541255},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1513416541255},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1513416541256},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541196},{"_id":"source/_posts/hexo/hexo-themes-Next.md","hash":"120c026998aca5d88bbbe1a45728e503815a809c","modified":1504927069000},{"_id":"source/_posts/hexo/hexo各种设置.md","hash":"4665dfec4be2252a2f3878a8870c6a026ec90643","modified":1504927069000},{"_id":"source/_posts/js/gulp压缩脚本.md","hash":"92e98a2da2053ba04895851de6682d0836433d3e","modified":1504927069000},{"_id":"source/_posts/js/手动触发addeventListener.md","hash":"3e1092469569d5bc9df75c92643ad967b08573f7","modified":1504927069000},{"_id":"source/_posts/工具/sublime插件.md","hash":"3550a3209c5b54e9bb273fadc65196f075b3fe29","modified":1513414875247},{"_id":"source/_posts/工具/windowTidy.md","hash":"2148deaf0cce55c47a111fbba3ae56f052e4ecf5","modified":1504927069000},{"_id":"source/_posts/工具/翻墙.md","hash":"eac256af163810bfa2ddd66edca2ddc914676c4a","modified":1504927069000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1513416512266},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1513416512265},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1513416512267},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1513416512268},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1513416512266},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1513416512267},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1513416512265},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1513416512268},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1513416512269},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1513416512263},{"_id":"themes/next/.git/logs/HEAD","hash":"f46e538d36b7b5b23b58440b38a86cb96001e0df","modified":1513416541130},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1513416541141},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1513416541142},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1513416541142},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1513416541142},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1513416541143},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1513416541143},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1513416541143},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1513416541143},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1513416541144},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1513416541144},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1513416541144},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1513416541146},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1513416541146},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1513416541146},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1513416541147},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1513416541149},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1513416541149},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1513416541151},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1513416541158},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1513416541159},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1513416541159},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1513416541160},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1513416541160},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1513416541160},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1513416541161},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1513416541166},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1513416541167},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1513416541167},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1513416541167},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1513416541167},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1513416541168},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1513416541168},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1513416541168},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1513416541168},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1513416541196},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1513416541196},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1513416541197},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1513416541197},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1513416541197},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1513416541198},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1513416541198},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1513416541198},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1513416541198},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1513416541199},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1513416541199},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1513416541199},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1513416541199},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1513416541200},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1513416541200},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1513416541200},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1513416541200},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1513416541201},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1513416541201},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541150},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541150},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541188},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541188},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541188},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541195},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1513416541196},{"_id":"source/_posts/static/images/user.jpg","hash":"0fb2e029ca6885a2b49277c56085249e8ccbb7f9","modified":1504927069000},{"_id":"themes/next/.git/refs/heads/master","hash":"d022a9d44457f7717004a8c765a92e0305245725","modified":1513416541129},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1513416541145},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1513416541145},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1513416541147},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1513416541147},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1513416541147},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1513416541148},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1513416541148},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1513416541149},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1513416541149},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1513416541150},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1513416541150},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1513416541150},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1513416541151},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1513416541151},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1513416541152},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1513416541152},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1513416541152},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1513416541152},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1513416541153},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1513416541153},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1513416541153},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1513416541153},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1513416541154},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1513416541154},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1513416541155},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1513416541155},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1513416541156},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1513416541156},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1513416541157},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1513416541157},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1513416541157},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1513416541157},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1513416541158},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1513416541158},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1513416541162},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1513416541162},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1513416541163},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1513416541163},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1513416541187},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1513416541187},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1513416541188},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1513416541188},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1513416541195},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1513416541195},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1513416541195},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1513416541196},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1513416541201},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1513416541202},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1513416541202},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1513416541202},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1513416541202},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1513416541203},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1513416541203},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1513416541203},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1513416541204},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1513416541204},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1513416541205},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1513416541209},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1513416541213},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1513416541213},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1513416541214},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1513416541214},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1513416541219},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1513416541219},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1513416541219},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1513416541220},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1513416541221},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1513416541221},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1513416541221},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1513416541222},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1513416541222},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1513416541235},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1513416541237},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1513416541237},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1513416541237},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1513416541237},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1513416541238},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1513416541238},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1513416541239},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1513416541239},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1513416541239},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1513416541240},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1513416541240},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1513416541240},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1513416541240},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1513416541241},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1513416541241},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1513416541241},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1513416541241},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1513416541242},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1513416541242},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1513416541242},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1513416541242},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1513416541243},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1513416541243},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1513416541244},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1513416541244},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1513416541244},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1513416541250},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1513416541250},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1513416541253},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1513416541254},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1513416541254},{"_id":"source/_posts/static/images/gulp4.0.png","hash":"28532a09c71dfc869ed5a6ed4a6cbcbf303fa4d7","modified":1504927069000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1513416541236},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"f46e538d36b7b5b23b58440b38a86cb96001e0df","modified":1513416541130},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1513416541127},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1513416541161},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1513416541162},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1513416541169},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1513416541169},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1513416541169},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1513416541169},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1513416541170},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1513416541174},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1513416541180},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1513416541185},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1513416541186},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1513416541186},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1513416541186},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1513416541186},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1513416541187},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1513416541187},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1513416541188},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1513416541189},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1513416541189},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1513416541189},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1513416541189},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1513416541190},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1513416541190},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1513416541190},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1513416541191},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1513416541191},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1513416541192},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1513416541192},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1513416541192},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1513416541193},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1513416541193},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1513416541193},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1513416541194},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1513416541194},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1513416541194},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1513416541204},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1513416541207},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1513416541208},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1513416541209},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1513416541214},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1513416541215},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1513416541215},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1513416541215},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1513416541215},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1513416541216},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1513416541218},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1513416541218},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1513416541219},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1513416541220},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1513416541221},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1513416541222},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1513416541223},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1513416541223},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1513416541249},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1513416541250},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1513416541208},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1513416541234},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1513416541235},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1513416541252},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"f46e538d36b7b5b23b58440b38a86cb96001e0df","modified":1513416541128},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1513416541170},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1513416541170},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1513416541171},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1513416541171},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1513416541171},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1513416541171},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1513416541172},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1513416541172},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1513416541172},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1513416541173},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1513416541173},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1513416541173},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1513416541173},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1513416541173},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1513416541174},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1513416541174},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1513416541175},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1513416541175},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1513416541175},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1513416541175},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1513416541176},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1513416541176},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1513416541176},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1513416541176},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1513416541177},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1513416541177},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1513416541177},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1513416541177},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1513416541178},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1513416541178},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1513416541178},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1513416541178},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1513416541179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1513416541179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1513416541179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1513416541179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1513416541180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1513416541180},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1513416541180},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1513416541181},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1513416541181},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1513416541181},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1513416541181},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1513416541182},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1513416541182},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1513416541182},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1513416541182},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1513416541183},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1513416541183},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1513416541183},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1513416541183},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1513416541184},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1513416541184},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1513416541184},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1513416541184},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1513416541184},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1513416541185},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1513416541185},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1513416541191},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1513416541191},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1513416541192},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1513416541205},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1513416541206},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1513416541206},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1513416541206},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1513416541207},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1513416541216},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1513416541216},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1513416541217},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1513416541217},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1513416541217},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1513416541217},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1513416541225},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1513416541227},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1513416541234},{"_id":"themes/next/.git/objects/pack/pack-593ab247dd504674bda36bd848242b06b94eb93c.idx","hash":"5c64872fc4bf0fdf412e5e8c12074ce761da1bba","modified":1513416541108},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1513416541212},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1513416541249},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1513416541232},{"_id":"themes/next/.git/objects/pack/pack-593ab247dd504674bda36bd848242b06b94eb93c.pack","hash":"87ccb81e5a13aff232f60376cf9071664cabfa8c","modified":1513416541104}],"Category":[],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjb96s5gw0000zoxpnejn5k0y","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"title":"tags","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\nlayout: tags\n\n---","date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","path":"tags/index.html","comments":1,"_id":"cjb96s5je0002zoxpoz78bf75","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n## Contributing\n\nContribution is welcome, feel free to open an issue and fork. Waiting for your pull request.\n\n[![hexo-image]][hexo-url]\n[![bower-image]][bower-url]\n[![jquery-image]][jquery-url]\n\n[hexo-image]: http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\n[hexo-url]: http://hexo.io\n[bower-image]: http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\n[bower-url]: http://bower.io\n[jquery-image]: https://img.shields.io/badge/jquery-1.9-blue.svg?style=flat-square\n[jquery-url]: http://jquery.com/\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: [hexo]\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n## Contributing\n\nContribution is welcome, feel free to open an issue and fork. Waiting for your pull request.\n\n[![hexo-image]][hexo-url]\n[![bower-image]][bower-url]\n[![jquery-image]][jquery-url]\n\n[hexo-image]: http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\n[hexo-url]: http://hexo.io\n[bower-image]: http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\n[bower-url]: http://bower.io\n[jquery-image]: https://img.shields.io/badge/jquery-1.9-blue.svg?style=flat-square\n[jquery-url]: http://jquery.com/\n","slug":"hello-world","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5ja0001zoxpl0ngmbv3","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.<br><a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Contributing\"><a href=\"#Contributing\" class=\"headerlink\" title=\"Contributing\"></a>Contributing</h2><p>Contribution is welcome, feel free to open an issue and fork. Waiting for your pull request.</p>\n<p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\" alt=\"hexo-image\"></a><br><a href=\"http://bower.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\" alt=\"bower-image\"></a><br><a href=\"http://jquery.com/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/jquery-1.9-blue.svg?style=flat-square\" alt=\"jquery-image\"></a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.<br>","more":"</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"Contributing\"><a href=\"#Contributing\" class=\"headerlink\" title=\"Contributing\"></a>Contributing</h2><p>Contribution is welcome, feel free to open an issue and fork. Waiting for your pull request.</p>\n<p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\" alt=\"hexo-image\"></a><br><a href=\"http://bower.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\" alt=\"bower-image\"></a><br><a href=\"http://jquery.com/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/jquery-1.9-blue.svg?style=flat-square\" alt=\"jquery-image\"></a></p>"},{"title":"sublime安装packageControl","_content":"\n原来Subl3安装Package Control很麻烦，现在简单的方法来了\n\n一、简单的安装方法\n\n使用Ctrl+`快捷键或者通过View->Show Console菜单打开命令行，粘贴如下代码：\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。\n\n顺便贴下Sublime Text2 的代码：\n```\nimport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n```\n二、手动安装\n\n可能由于各种原因，无法使用代码安装，那可以通过以下步骤手动安装Package Control：\n\n1.点击Preferences > Browse Packages菜单\n\n2.进入打开的目录的上层目录，然后再进入Installed Packages/目录\n\n3.下载[Package Control.sublime-package](https://sublime.wbond.net/Package%20Control.sublime-package)并复制到Installed Packages/目录\n\n4.重启Sublime Text。\n\n","source":"_posts/sublime安装packageControl.md","raw":"---\ntitle: sublime安装packageControl\ntags: [sublime]\n---\n\n原来Subl3安装Package Control很麻烦，现在简单的方法来了\n\n一、简单的安装方法\n\n使用Ctrl+`快捷键或者通过View->Show Console菜单打开命令行，粘贴如下代码：\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。\n\n顺便贴下Sublime Text2 的代码：\n```\nimport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n```\n二、手动安装\n\n可能由于各种原因，无法使用代码安装，那可以通过以下步骤手动安装Package Control：\n\n1.点击Preferences > Browse Packages菜单\n\n2.进入打开的目录的上层目录，然后再进入Installed Packages/目录\n\n3.下载[Package Control.sublime-package](https://sublime.wbond.net/Package%20Control.sublime-package)并复制到Installed Packages/目录\n\n4.重启Sublime Text。\n\n","slug":"sublime安装packageControl","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5jf0003zoxpit579zzp","content":"<p>原来Subl3安装Package Control很麻烦，现在简单的方法来了</p>\n<p>一、简单的安装方法</p>\n<p>使用Ctrl+`快捷键或者通过View-&gt;Show Console菜单打开命令行，粘贴如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br></pre></td></tr></table></figure></p>\n<p>如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。</p>\n<p>顺便贴下Sublime Text2 的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib2,os; pf=&apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), &apos;wb&apos; ).write( urllib2.urlopen( &apos;http://sublime.wbond.net/&apos; +pf.replace( &apos; &apos;,&apos;%20&apos; )).read()); print( &apos;Please restart Sublime Text to finish installation&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>二、手动安装</p>\n<p>可能由于各种原因，无法使用代码安装，那可以通过以下步骤手动安装Package Control：</p>\n<p>1.点击Preferences &gt; Browse Packages菜单</p>\n<p>2.进入打开的目录的上层目录，然后再进入Installed Packages/目录</p>\n<p>3.下载<a href=\"https://sublime.wbond.net/Package%20Control.sublime-package\" target=\"_blank\" rel=\"noopener\">Package Control.sublime-package</a>并复制到Installed Packages/目录</p>\n<p>4.重启Sublime Text。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>原来Subl3安装Package Control很麻烦，现在简单的方法来了</p>\n<p>一、简单的安装方法</p>\n<p>使用Ctrl+`快捷键或者通过View-&gt;Show Console菜单打开命令行，粘贴如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br></pre></td></tr></table></figure></p>\n<p>如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。</p>\n<p>顺便贴下Sublime Text2 的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib2,os; pf=&apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), &apos;wb&apos; ).write( urllib2.urlopen( &apos;http://sublime.wbond.net/&apos; +pf.replace( &apos; &apos;,&apos;%20&apos; )).read()); print( &apos;Please restart Sublime Text to finish installation&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>二、手动安装</p>\n<p>可能由于各种原因，无法使用代码安装，那可以通过以下步骤手动安装Package Control：</p>\n<p>1.点击Preferences &gt; Browse Packages菜单</p>\n<p>2.进入打开的目录的上层目录，然后再进入Installed Packages/目录</p>\n<p>3.下载<a href=\"https://sublime.wbond.net/Package%20Control.sublime-package\" target=\"_blank\" rel=\"noopener\">Package Control.sublime-package</a>并复制到Installed Packages/目录</p>\n<p>4.重启Sublime Text。</p>\n"},{"title":"NexT 精于心，简于形","_content":"# NexT\n\n> 精于心，简于形\n\n<a href=\"http://notes.iissnan.com\" target=\"_blank\">在线预览 Preview</a> | <a href=\"http://theme-next.iissnan.com\" target=\"_blank\">NexT 使用文档</a> |  [English Documentation](README.en.md)\n\n[![Join the chat at https://gitter.im/iissnan/hexo-theme-next](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/iissnan/hexo-theme-next?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n![NexT Schemes](http://iissnan.com/nexus/next/next-schemes.jpg)\n\n\n## 浏览器支持 Browser support\n\n![Browser support](http://iissnan.com/nexus/next/browser-support.png)\n\n\n## 贡献 Contributing\n\n接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的`Pull Request`。\n\nAny types of contribution are welcome. Thanks.\n\n## 开发 Development\n\nNexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。\n\nNexT is built for easily use with elegant appearance. First things first, always keep things simple.\n\n## [开发历史 Changelog](https://github.com/iissnan/hexo-theme-next/wiki/Changelog)\n\n[![hexo-image]][hexo-url]\n[![bower-image]][bower-url]\n[![jquery-image]][jquery-url]\n[![velocity-image]][velocity-url]\n\n[hexo-image]: http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\n[hexo-url]: http://hexo.io\n[bower-image]: http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\n[bower-url]: http://bower.io\n[jquery-image]: https://img.shields.io/badge/jquery-2.1-2BAF2B.svg?style=flat-square\n[jquery-url]: http://jquery.com/\n[velocity-image]: https://img.shields.io/badge/Velocity-1.2-2BAF2B.svg?style=flat-square\n[velocity-url]: http://julian.com/research/velocity/\n","source":"_posts/hexo/hexo-themes-Next.md","raw":"---\ntitle: NexT 精于心，简于形\ntags: [hexo]\n---\n# NexT\n\n> 精于心，简于形\n\n<a href=\"http://notes.iissnan.com\" target=\"_blank\">在线预览 Preview</a> | <a href=\"http://theme-next.iissnan.com\" target=\"_blank\">NexT 使用文档</a> |  [English Documentation](README.en.md)\n\n[![Join the chat at https://gitter.im/iissnan/hexo-theme-next](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/iissnan/hexo-theme-next?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n![NexT Schemes](http://iissnan.com/nexus/next/next-schemes.jpg)\n\n\n## 浏览器支持 Browser support\n\n![Browser support](http://iissnan.com/nexus/next/browser-support.png)\n\n\n## 贡献 Contributing\n\n接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的`Pull Request`。\n\nAny types of contribution are welcome. Thanks.\n\n## 开发 Development\n\nNexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。\n\nNexT is built for easily use with elegant appearance. First things first, always keep things simple.\n\n## [开发历史 Changelog](https://github.com/iissnan/hexo-theme-next/wiki/Changelog)\n\n[![hexo-image]][hexo-url]\n[![bower-image]][bower-url]\n[![jquery-image]][jquery-url]\n[![velocity-image]][velocity-url]\n\n[hexo-image]: http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\n[hexo-url]: http://hexo.io\n[bower-image]: http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\n[bower-url]: http://bower.io\n[jquery-image]: https://img.shields.io/badge/jquery-2.1-2BAF2B.svg?style=flat-square\n[jquery-url]: http://jquery.com/\n[velocity-image]: https://img.shields.io/badge/Velocity-1.2-2BAF2B.svg?style=flat-square\n[velocity-url]: http://julian.com/research/velocity/\n","slug":"hexo/hexo-themes-Next","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5po0008zoxp3v0ncm6l","content":"<h1 id=\"NexT\"><a href=\"#NexT\" class=\"headerlink\" title=\"NexT\"></a>NexT</h1><blockquote>\n<p>精于心，简于形</p>\n</blockquote>\n<p><a href=\"http://notes.iissnan.com\" target=\"_blank\">在线预览 Preview</a> | <a href=\"http://theme-next.iissnan.com\" target=\"_blank\">NexT 使用文档</a> |  <a href=\"README.en.md\">English Documentation</a></p>\n<p><a href=\"https://gitter.im/iissnan/hexo-theme-next?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/iissnan/hexo-theme-next\"></a></p>\n<p><img src=\"http://iissnan.com/nexus/next/next-schemes.jpg\" alt=\"NexT Schemes\"></p>\n<h2 id=\"浏览器支持-Browser-support\"><a href=\"#浏览器支持-Browser-support\" class=\"headerlink\" title=\"浏览器支持 Browser support\"></a>浏览器支持 Browser support</h2><p><img src=\"http://iissnan.com/nexus/next/browser-support.png\" alt=\"Browser support\"></p>\n<h2 id=\"贡献-Contributing\"><a href=\"#贡献-Contributing\" class=\"headerlink\" title=\"贡献 Contributing\"></a>贡献 Contributing</h2><p>接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的<code>Pull Request</code>。</p>\n<p>Any types of contribution are welcome. Thanks.</p>\n<h2 id=\"开发-Development\"><a href=\"#开发-Development\" class=\"headerlink\" title=\"开发 Development\"></a>开发 Development</h2><p>NexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。</p>\n<p>NexT is built for easily use with elegant appearance. First things first, always keep things simple.</p>\n<h2 id=\"开发历史-Changelog\"><a href=\"#开发历史-Changelog\" class=\"headerlink\" title=\"开发历史 Changelog\"></a><a href=\"https://github.com/iissnan/hexo-theme-next/wiki/Changelog\" target=\"_blank\" rel=\"noopener\">开发历史 Changelog</a></h2><p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\" alt=\"hexo-image\"></a><br><a href=\"http://bower.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\" alt=\"bower-image\"></a><br><a href=\"http://jquery.com/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/jquery-2.1-2BAF2B.svg?style=flat-square\" alt=\"jquery-image\"></a><br><a href=\"http://julian.com/research/velocity/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/Velocity-1.2-2BAF2B.svg?style=flat-square\" alt=\"velocity-image\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"NexT\"><a href=\"#NexT\" class=\"headerlink\" title=\"NexT\"></a>NexT</h1><blockquote>\n<p>精于心，简于形</p>\n</blockquote>\n<p><a href=\"http://notes.iissnan.com\" target=\"_blank\">在线预览 Preview</a> | <a href=\"http://theme-next.iissnan.com\" target=\"_blank\">NexT 使用文档</a> |  <a href=\"README.en.md\">English Documentation</a></p>\n<p><a href=\"https://gitter.im/iissnan/hexo-theme-next?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/iissnan/hexo-theme-next\"></a></p>\n<p><img src=\"http://iissnan.com/nexus/next/next-schemes.jpg\" alt=\"NexT Schemes\"></p>\n<h2 id=\"浏览器支持-Browser-support\"><a href=\"#浏览器支持-Browser-support\" class=\"headerlink\" title=\"浏览器支持 Browser support\"></a>浏览器支持 Browser support</h2><p><img src=\"http://iissnan.com/nexus/next/browser-support.png\" alt=\"Browser support\"></p>\n<h2 id=\"贡献-Contributing\"><a href=\"#贡献-Contributing\" class=\"headerlink\" title=\"贡献 Contributing\"></a>贡献 Contributing</h2><p>接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的<code>Pull Request</code>。</p>\n<p>Any types of contribution are welcome. Thanks.</p>\n<h2 id=\"开发-Development\"><a href=\"#开发-Development\" class=\"headerlink\" title=\"开发 Development\"></a>开发 Development</h2><p>NexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。</p>\n<p>NexT is built for easily use with elegant appearance. First things first, always keep things simple.</p>\n<h2 id=\"开发历史-Changelog\"><a href=\"#开发历史-Changelog\" class=\"headerlink\" title=\"开发历史 Changelog\"></a><a href=\"https://github.com/iissnan/hexo-theme-next/wiki/Changelog\" target=\"_blank\" rel=\"noopener\">开发历史 Changelog</a></h2><p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Hexo-2.4+-2BAF2B.svg?style=flat-square\" alt=\"hexo-image\"></a><br><a href=\"http://bower.io\" target=\"_blank\" rel=\"noopener\"><img src=\"http://img.shields.io/badge/Bower-*-2BAF2B.svg?style=flat-square\" alt=\"bower-image\"></a><br><a href=\"http://jquery.com/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/jquery-2.1-2BAF2B.svg?style=flat-square\" alt=\"jquery-image\"></a><br><a href=\"http://julian.com/research/velocity/\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/badge/Velocity-1.2-2BAF2B.svg?style=flat-square\" alt=\"velocity-image\"></a></p>\n"},{"title":"gulp压缩脚本","_content":"自己手动写了一个压缩脚本，主要实现了对比压缩，没有改变的文件不会压缩大大缩小了压缩时间\n<!--more-->\n![图片](http://7xr7dg.com1.z0.glb.clouddn.com/hexoblog/images/gulp4.0.png)\n```bash\nvar gulp = require(\"gulp\"),\n    del = require('del'),\n    rev = require(\"gulp-rev\"),\n    revReplace = require(\"gulp-rev-replace\"),\n    uglify = require(\"gulp-uglify\"),\n    minifyCss = require('gulp-minify-css'),\n    concat = require('gulp-concat'),\n    replace = require('gulp-replace-task'),\n    htmlmin = require('gulp-htmlmin'),\n    runSequence = require('run-sequence'),\n    imagemin = require('gulp-imagemin'),\n    pngquant = require('imagemin-pngquant'),\n    gulpif = require('gulp-if'),\n    fs = require('fs');\n\nvar path = \".build\"\nvar opt = {\n    backpath: path + \"/back\",\n    zippath: path + \"/zip\",\n    revpath: path + \"/rev\"\n}\n\nopt.ziprevpath = opt.zippath + \"/rev\"\n///////////////////////////////////压缩////////////////////////////////////////////////////////\ngulp.task(\"delrev\", function(cb) {\n    del('rev', {\n        force: true\n    }).then(function() {\n        cb();\n    });\n})\ngulp.task(\"ziporiginal\", function() {\n    return gulp.src([opt.zippath + \"/**\", opt.zippath + \"/*.*\"])\n        .pipe(gulp.dest(\"\"))\n})\n\ngulp.task(\"copyrev\", function() {\n    return gulp.src(opt.revpath + \"/rev.json\")\n        .pipe(gulp.dest(opt.ziprevpath))\n})\n\ngulp.task(\"uglifyall\", function(cb) {\n    //如果有旧版本文件，就开始对比\n    if (zipbackdir_rev_status) {\n\n        console.log(\"开始对比\");\n        //得出对比后有的差异\n        var obj = revCompared(opt.revpath + \"/rev.json\", opt.ziprevpath + \"/rev.json\")\n\n        if (!obj.arr.length) {\n            console.log(\"没有文件改变\")\n        }\n\n        if (obj.del.arr.length) {\n            for (var i = 0; i < obj.del.arr.length; i++) {\n\n                //先检查一下，zipback里面是否还有这个文件，如果没有则跳过\n                if (!fs.existsSync(opt.zippath + \"/\" + obj.del.arr[i])) {\n                    continue;\n                }\n\n                //走到这里说明有删除文件，开始走删除文件方法\n                deldir(obj.del.arr[i])\n\n                function deldir(url) {\n\n                    //解析文件路径，从第一级开始比较，如果，第一级或是第二级。。。新文件里没有了。而老文件里有，说明要删除\n                    urlarr = url.split(\"/\")\n\n                    var str = urlarr[0];\n                    for (var i = 0; i < urlarr.length; i++) {\n                        //得出文件夹转台\n                        var dir = fs.existsSync(str)\n                            //得出备份文件夹状态\n                        var zip_dir = fs.existsSync(opt.zippath + \"/\" + str)\n                            //如果新文件夹里没有。旧文件里有，说明是删除，则执行删除文件\n                        if (!dir && zip_dir) {\n\n                            console.log(\"del：\" + str)\n                            del.sync(opt.zippath + \"/\" + str, {\n                                force: true\n                            })\n                        }\n                        //走到这一步说明新文件夹里有，则进入下一级目录\n                        str += \"/\" + urlarr[i + 1]\n                    }\n                }\n                //如果删除文件后是空文件夹，应该把备份里的空文件夹也删除\n            }\n        }\n    } else {\n        //没有旧版本文件，就只读取新文件，然后执行\n        console.log(\"全量压缩\")\n        var obj = revCompared(opt.revpath + \"/rev.json\")\n    }\n    console.log(obj.arr)\n    return gulp.src(obj.arr, {\n            base: \"./\"\n        })\n        .pipe(gulpif([\"*.js\", \"**/*.js\", \"!js/config**\"], uglify()))\n        .pipe(gulpif(\"*.css\", minifyCss()))\n        .pipe(gulpif([\"*.html\"], htmlmin({ collapseWhitespace: true })))\n        .pipe(gulpif([\"*.tpl\"],htmlmin({collapseWhitespace: true})))\n        .pipe(gulpif(\"*.jpg\", imagemin({\n            progressive: true,\n            svgoPlugins: [{\n                removeViewBox: false\n            }],\n            use: [pngquant()]\n        })))\n        .pipe(gulp.dest(opt.zippath));\n\n})\n\n//以上开始压缩js\n//以下都是为了得出文件版本号\n\ngulp.task(\"main_production\", function() {\n        return gulp.src(['js/main_production.js',opt.revpath+'/rev.json'])\n            .pipe(concat(\"main.js\"))\n            //.pipe(uglify())\n            .pipe(gulp.dest(opt.zippath+\"/js\"))\n    })\ngulp.task(\"test\", function() {\n        //return gulp.src([\"js/templates/base/wrap.tpl\"])\n        //return gulp.src([\"js/templates/base/header.tpl\"])\n        return gulp.src([\"js/templates/base/menu.tpl\"])\n            .pipe(uglify())\n            .pipe(gulp.dest(opt.zippath + \"htmlmin\"))\n    })\n    //以上开始压缩js\n    //以下都是为了得出文件版本号\n    // gulp.task(\"concatconfig\", function() {\n    //     return gulp.src([\"js/config.production.js\", opt.revpath + \"/rev.json\"])\n    //         .pipe(concat(\"config.js\"))\n    //         .pipe(gulp.dest(opt.zippath + \"/js\"))\n    // })\ngulp.task(\"rev\", function() {\n        return gulp.src(excludefile.concat('!js/main_production.js','!js/main.js'))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）\ngulp.task(\"js\", function() {\n        var rev_static = gulp.src(\".rev/rev-static.json\");\n        var rev_style = gulp.src(\".rev/rev-style.json\");\n        var rev_tpl = gulp.src(\".rev/rev-tpl.json\");\n        return gulp.src([\"*/**/*.*js\", \"*/*.*js\"])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(revReplace({\n                manifest: rev_style\n            }))\n            .pipe(revReplace({\n                manifest: rev_tpl\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-js.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）\ngulp.task(\"tpl\", function() {\n        var rev_static = gulp.src(\".rev/rev-static.json\");\n        var rev_style = gulp.src(\".rev/rev-style.json\");\n        return gulp.src([\"*/**/*.*tpl\", \"*/*.*tpl\"])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(revReplace({\n                manifest: rev_style\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-tpl.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //替换css里在的图片路径，并生成CSS版本号文件rev-style.json\ngulp.task(\"css\", function() {\n        var rev_static = gulp.src(opt.revpath + \"/rev-static.json\");\n        return gulp.src(['*/**/*.*css', '*/*.*css'])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-style.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //生成所有静态资源版本号文件\ngulp.task(\"static\", function() {\n        return gulp.src([\"*/**/*.!(*css|*js|*tpl)\", \"*/*.!(*css|*js|*tpl)\"])\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-static.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //压缩之前先把所有的文件备份一遍\ngulp.task(\"copy\", function() {\n    return gulp.src(excludefile)\n        .pipe(gulp.dest(opt.backpath))\n})\n\ngulp.task('zip', function(cb) {\n    runSequence('copy', 'static', 'css', 'tpl', 'js', 'rev','main_production', 'uglifyall', \"copyrev\",  'ziporiginal','delrev', cb);\n});\n\nfunction revCompared(newfile, oldfile) {\n    //文件对比。对比两个json版本文件。\n    //如果新文件里有，旧文件里没有，说明是新加\n    //如果旧文件里有，新文件里没有，说明是删除\n    //如果新文件里有，旧文件里也有，但不一样，说明文件内容有改变\n    //以上三种情况都会被添加到返回的对象中\n\n\n    //读取新版本文件\n    var rev = fs.readFileSync(newfile);\n    //新文件转化为json\n    var json_rev = JSON.parse(rev);\n    //返回的对象,存放所有对比结果\n    var obj = {};\n    //存放新加、改动文件的对象\n    obj.arr = []\n    obj.json = {}\n        //存放新增文件的对象\n    obj.add = {}\n    obj.add.arr = []\n    obj.add.json = {}\n        //存放删除文件的对象\n    obj.del = {}\n    obj.del.arr = []\n    obj.del.json = {}\n        //只存放改动文件的对象\n    obj.change = {}\n    obj.change.arr = []\n    obj.change.json = {}\n\n    //看是否有老版本文件\n    if (oldfile) {\n        //读取老版本文件\n        var ziprev = fs.readFileSync(oldfile)\n            //老版本文件转为json\n        var json_ziprev = JSON.parse(ziprev)\n\n        //先循环新版本文件，跟老版本文件进行文件版本对比\n        for (a in json_rev) {\n            //如果老文件里面没有这个文件，说明是新增文件\n            if (!json_ziprev[a]) {\n                obj.add.arr.push(a)\n                obj.add.json[a] = json_rev[a]\n\n                obj.arr.push(a)\n                obj.json[a] = json_rev[a]\n                    //如果老文件有，但版本号不一样，说明内容有变动\n            } else if (json_rev[a] != json_ziprev[a]) {\n                obj.change.arr.push(a);\n                obj.change.json[a] = json_rev[a];\n\n                obj.arr.push(a);\n                obj.json[a] = json_rev[a];\n            }\n        };\n        (function() {\n            //循环旧版本文件\n            for (a in json_ziprev) {\n                //如果旧版本文件里有，新版本文件里没有则是删除\n                if (!json_rev[a]) {\n                    //将改动的文件放入删除对象中\n                    obj.del.arr.push(a)\n                    obj.del.json[a] = json_ziprev[a]\n                }\n            }\n        })();\n        return obj\n    } else {\n        //如果没有老版本文件，循环新版本文件。放入到对象中\n        for (a in json_rev) {\n            obj.arr.push(a)\n            obj.json[a] = json_rev[a]\n        }\n        return obj\n    }\n\n}\n\n/////////////////////////////解压///////////////////////////////////////////////////////\n//要还原之前，首先把原来的代码进行备份\ngulp.task(\"zipback\", function() {\n        return gulp.src(excludefile.concat(\"!rev/**\", \"!rev*\"))\n            .pipe(gulp.dest(opt.zippath))\n    })\n    //压缩代码备份完之后，开始还原代码,这不是还原，这是覆盖，应该删除之前的所有文件夹，再还原。。。待改\ngulp.task(\"recovery\", function() {\n    return gulp.src(opt.backpath + \"/**\")\n        .pipe(gulp.dest(\"\"))\n})\n\ngulp.task(\"delback\", function(cb) {\n    del([opt.backpath], {\n        force: true\n    }).then(function() {\n        cb();\n    })\n})\ngulp.task('unzip', function(cb) {\n    runSequence('zipback', 'recovery', 'delback', cb);\n});\n////////////////////////////////////////////////////////////////////////\n\nvar gulpbackdir_status = fs.existsSync(opt.backpath)\nvar zipbackdir_rev_status = fs.existsSync(opt.ziprevpath + \"/rev.json\");\n//跑脚本时忽略文件\nvar excludefile = [\"**\",'!node_modules/**','!package.json', \"!gulpfile.js\", \"!\" + path + \"/**\", \"!\" + path + \"**\"]\nvar build;\nif (gulpbackdir_status) {\n    build = [\"unzip\"]\n} else {\n    build = [\"zip\"]\n}\n//入口\ngulp.task(\"default\", build, function(cb) {\n    cb()\n});\n```","source":"_posts/js/gulp压缩脚本.md","raw":"---\ntitle: gulp压缩脚本\ntags: [gulp]\n---\n自己手动写了一个压缩脚本，主要实现了对比压缩，没有改变的文件不会压缩大大缩小了压缩时间\n<!--more-->\n![图片](http://7xr7dg.com1.z0.glb.clouddn.com/hexoblog/images/gulp4.0.png)\n```bash\nvar gulp = require(\"gulp\"),\n    del = require('del'),\n    rev = require(\"gulp-rev\"),\n    revReplace = require(\"gulp-rev-replace\"),\n    uglify = require(\"gulp-uglify\"),\n    minifyCss = require('gulp-minify-css'),\n    concat = require('gulp-concat'),\n    replace = require('gulp-replace-task'),\n    htmlmin = require('gulp-htmlmin'),\n    runSequence = require('run-sequence'),\n    imagemin = require('gulp-imagemin'),\n    pngquant = require('imagemin-pngquant'),\n    gulpif = require('gulp-if'),\n    fs = require('fs');\n\nvar path = \".build\"\nvar opt = {\n    backpath: path + \"/back\",\n    zippath: path + \"/zip\",\n    revpath: path + \"/rev\"\n}\n\nopt.ziprevpath = opt.zippath + \"/rev\"\n///////////////////////////////////压缩////////////////////////////////////////////////////////\ngulp.task(\"delrev\", function(cb) {\n    del('rev', {\n        force: true\n    }).then(function() {\n        cb();\n    });\n})\ngulp.task(\"ziporiginal\", function() {\n    return gulp.src([opt.zippath + \"/**\", opt.zippath + \"/*.*\"])\n        .pipe(gulp.dest(\"\"))\n})\n\ngulp.task(\"copyrev\", function() {\n    return gulp.src(opt.revpath + \"/rev.json\")\n        .pipe(gulp.dest(opt.ziprevpath))\n})\n\ngulp.task(\"uglifyall\", function(cb) {\n    //如果有旧版本文件，就开始对比\n    if (zipbackdir_rev_status) {\n\n        console.log(\"开始对比\");\n        //得出对比后有的差异\n        var obj = revCompared(opt.revpath + \"/rev.json\", opt.ziprevpath + \"/rev.json\")\n\n        if (!obj.arr.length) {\n            console.log(\"没有文件改变\")\n        }\n\n        if (obj.del.arr.length) {\n            for (var i = 0; i < obj.del.arr.length; i++) {\n\n                //先检查一下，zipback里面是否还有这个文件，如果没有则跳过\n                if (!fs.existsSync(opt.zippath + \"/\" + obj.del.arr[i])) {\n                    continue;\n                }\n\n                //走到这里说明有删除文件，开始走删除文件方法\n                deldir(obj.del.arr[i])\n\n                function deldir(url) {\n\n                    //解析文件路径，从第一级开始比较，如果，第一级或是第二级。。。新文件里没有了。而老文件里有，说明要删除\n                    urlarr = url.split(\"/\")\n\n                    var str = urlarr[0];\n                    for (var i = 0; i < urlarr.length; i++) {\n                        //得出文件夹转台\n                        var dir = fs.existsSync(str)\n                            //得出备份文件夹状态\n                        var zip_dir = fs.existsSync(opt.zippath + \"/\" + str)\n                            //如果新文件夹里没有。旧文件里有，说明是删除，则执行删除文件\n                        if (!dir && zip_dir) {\n\n                            console.log(\"del：\" + str)\n                            del.sync(opt.zippath + \"/\" + str, {\n                                force: true\n                            })\n                        }\n                        //走到这一步说明新文件夹里有，则进入下一级目录\n                        str += \"/\" + urlarr[i + 1]\n                    }\n                }\n                //如果删除文件后是空文件夹，应该把备份里的空文件夹也删除\n            }\n        }\n    } else {\n        //没有旧版本文件，就只读取新文件，然后执行\n        console.log(\"全量压缩\")\n        var obj = revCompared(opt.revpath + \"/rev.json\")\n    }\n    console.log(obj.arr)\n    return gulp.src(obj.arr, {\n            base: \"./\"\n        })\n        .pipe(gulpif([\"*.js\", \"**/*.js\", \"!js/config**\"], uglify()))\n        .pipe(gulpif(\"*.css\", minifyCss()))\n        .pipe(gulpif([\"*.html\"], htmlmin({ collapseWhitespace: true })))\n        .pipe(gulpif([\"*.tpl\"],htmlmin({collapseWhitespace: true})))\n        .pipe(gulpif(\"*.jpg\", imagemin({\n            progressive: true,\n            svgoPlugins: [{\n                removeViewBox: false\n            }],\n            use: [pngquant()]\n        })))\n        .pipe(gulp.dest(opt.zippath));\n\n})\n\n//以上开始压缩js\n//以下都是为了得出文件版本号\n\ngulp.task(\"main_production\", function() {\n        return gulp.src(['js/main_production.js',opt.revpath+'/rev.json'])\n            .pipe(concat(\"main.js\"))\n            //.pipe(uglify())\n            .pipe(gulp.dest(opt.zippath+\"/js\"))\n    })\ngulp.task(\"test\", function() {\n        //return gulp.src([\"js/templates/base/wrap.tpl\"])\n        //return gulp.src([\"js/templates/base/header.tpl\"])\n        return gulp.src([\"js/templates/base/menu.tpl\"])\n            .pipe(uglify())\n            .pipe(gulp.dest(opt.zippath + \"htmlmin\"))\n    })\n    //以上开始压缩js\n    //以下都是为了得出文件版本号\n    // gulp.task(\"concatconfig\", function() {\n    //     return gulp.src([\"js/config.production.js\", opt.revpath + \"/rev.json\"])\n    //         .pipe(concat(\"config.js\"))\n    //         .pipe(gulp.dest(opt.zippath + \"/js\"))\n    // })\ngulp.task(\"rev\", function() {\n        return gulp.src(excludefile.concat('!js/main_production.js','!js/main.js'))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）\ngulp.task(\"js\", function() {\n        var rev_static = gulp.src(\".rev/rev-static.json\");\n        var rev_style = gulp.src(\".rev/rev-style.json\");\n        var rev_tpl = gulp.src(\".rev/rev-tpl.json\");\n        return gulp.src([\"*/**/*.*js\", \"*/*.*js\"])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(revReplace({\n                manifest: rev_style\n            }))\n            .pipe(revReplace({\n                manifest: rev_tpl\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-js.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）\ngulp.task(\"tpl\", function() {\n        var rev_static = gulp.src(\".rev/rev-static.json\");\n        var rev_style = gulp.src(\".rev/rev-style.json\");\n        return gulp.src([\"*/**/*.*tpl\", \"*/*.*tpl\"])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(revReplace({\n                manifest: rev_style\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-tpl.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //替换css里在的图片路径，并生成CSS版本号文件rev-style.json\ngulp.task(\"css\", function() {\n        var rev_static = gulp.src(opt.revpath + \"/rev-static.json\");\n        return gulp.src(['*/**/*.*css', '*/*.*css'])\n            .pipe(revReplace({\n                manifest: rev_static\n            }))\n            .pipe(gulp.dest(\"\"))\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-style.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //生成所有静态资源版本号文件\ngulp.task(\"static\", function() {\n        return gulp.src([\"*/**/*.!(*css|*js|*tpl)\", \"*/*.!(*css|*js|*tpl)\"])\n            .pipe(rev())\n            .pipe(rev.manifest(\"rev-static.json\"))\n            .pipe(replace({ //替换字符串\n                patterns: [{\n                    match: /['|\"](.{1,})['|\"].{1,}['|\"].*-{1,}?(.[^.]*).{1,}['|\"]/g,\n                    replacement: '\"$1\":\"$1?v=$2\"'\n                }]\n            }))\n            .pipe(gulp.dest(opt.revpath))\n    })\n    //压缩之前先把所有的文件备份一遍\ngulp.task(\"copy\", function() {\n    return gulp.src(excludefile)\n        .pipe(gulp.dest(opt.backpath))\n})\n\ngulp.task('zip', function(cb) {\n    runSequence('copy', 'static', 'css', 'tpl', 'js', 'rev','main_production', 'uglifyall', \"copyrev\",  'ziporiginal','delrev', cb);\n});\n\nfunction revCompared(newfile, oldfile) {\n    //文件对比。对比两个json版本文件。\n    //如果新文件里有，旧文件里没有，说明是新加\n    //如果旧文件里有，新文件里没有，说明是删除\n    //如果新文件里有，旧文件里也有，但不一样，说明文件内容有改变\n    //以上三种情况都会被添加到返回的对象中\n\n\n    //读取新版本文件\n    var rev = fs.readFileSync(newfile);\n    //新文件转化为json\n    var json_rev = JSON.parse(rev);\n    //返回的对象,存放所有对比结果\n    var obj = {};\n    //存放新加、改动文件的对象\n    obj.arr = []\n    obj.json = {}\n        //存放新增文件的对象\n    obj.add = {}\n    obj.add.arr = []\n    obj.add.json = {}\n        //存放删除文件的对象\n    obj.del = {}\n    obj.del.arr = []\n    obj.del.json = {}\n        //只存放改动文件的对象\n    obj.change = {}\n    obj.change.arr = []\n    obj.change.json = {}\n\n    //看是否有老版本文件\n    if (oldfile) {\n        //读取老版本文件\n        var ziprev = fs.readFileSync(oldfile)\n            //老版本文件转为json\n        var json_ziprev = JSON.parse(ziprev)\n\n        //先循环新版本文件，跟老版本文件进行文件版本对比\n        for (a in json_rev) {\n            //如果老文件里面没有这个文件，说明是新增文件\n            if (!json_ziprev[a]) {\n                obj.add.arr.push(a)\n                obj.add.json[a] = json_rev[a]\n\n                obj.arr.push(a)\n                obj.json[a] = json_rev[a]\n                    //如果老文件有，但版本号不一样，说明内容有变动\n            } else if (json_rev[a] != json_ziprev[a]) {\n                obj.change.arr.push(a);\n                obj.change.json[a] = json_rev[a];\n\n                obj.arr.push(a);\n                obj.json[a] = json_rev[a];\n            }\n        };\n        (function() {\n            //循环旧版本文件\n            for (a in json_ziprev) {\n                //如果旧版本文件里有，新版本文件里没有则是删除\n                if (!json_rev[a]) {\n                    //将改动的文件放入删除对象中\n                    obj.del.arr.push(a)\n                    obj.del.json[a] = json_ziprev[a]\n                }\n            }\n        })();\n        return obj\n    } else {\n        //如果没有老版本文件，循环新版本文件。放入到对象中\n        for (a in json_rev) {\n            obj.arr.push(a)\n            obj.json[a] = json_rev[a]\n        }\n        return obj\n    }\n\n}\n\n/////////////////////////////解压///////////////////////////////////////////////////////\n//要还原之前，首先把原来的代码进行备份\ngulp.task(\"zipback\", function() {\n        return gulp.src(excludefile.concat(\"!rev/**\", \"!rev*\"))\n            .pipe(gulp.dest(opt.zippath))\n    })\n    //压缩代码备份完之后，开始还原代码,这不是还原，这是覆盖，应该删除之前的所有文件夹，再还原。。。待改\ngulp.task(\"recovery\", function() {\n    return gulp.src(opt.backpath + \"/**\")\n        .pipe(gulp.dest(\"\"))\n})\n\ngulp.task(\"delback\", function(cb) {\n    del([opt.backpath], {\n        force: true\n    }).then(function() {\n        cb();\n    })\n})\ngulp.task('unzip', function(cb) {\n    runSequence('zipback', 'recovery', 'delback', cb);\n});\n////////////////////////////////////////////////////////////////////////\n\nvar gulpbackdir_status = fs.existsSync(opt.backpath)\nvar zipbackdir_rev_status = fs.existsSync(opt.ziprevpath + \"/rev.json\");\n//跑脚本时忽略文件\nvar excludefile = [\"**\",'!node_modules/**','!package.json', \"!gulpfile.js\", \"!\" + path + \"/**\", \"!\" + path + \"**\"]\nvar build;\nif (gulpbackdir_status) {\n    build = [\"unzip\"]\n} else {\n    build = [\"zip\"]\n}\n//入口\ngulp.task(\"default\", build, function(cb) {\n    cb()\n});\n```","slug":"js/gulp压缩脚本","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5pq0009zoxpj0oyzqpe","content":"<p>自己手动写了一个压缩脚本，主要实现了对比压缩，没有改变的文件不会压缩大大缩小了压缩时间<br><a id=\"more\"></a><br><img src=\"http://7xr7dg.com1.z0.glb.clouddn.com/hexoblog/images/gulp4.0.png\" alt=\"图片\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var gulp = require(<span class=\"string\">\"gulp\"</span>),</span><br><span class=\"line\">    del = require(<span class=\"string\">'del'</span>),</span><br><span class=\"line\">    rev = require(<span class=\"string\">\"gulp-rev\"</span>),</span><br><span class=\"line\">    revReplace = require(<span class=\"string\">\"gulp-rev-replace\"</span>),</span><br><span class=\"line\">    uglify = require(<span class=\"string\">\"gulp-uglify\"</span>),</span><br><span class=\"line\">    minifyCss = require(<span class=\"string\">'gulp-minify-css'</span>),</span><br><span class=\"line\">    concat = require(<span class=\"string\">'gulp-concat'</span>),</span><br><span class=\"line\">    replace = require(<span class=\"string\">'gulp-replace-task'</span>),</span><br><span class=\"line\">    htmlmin = require(<span class=\"string\">'gulp-htmlmin'</span>),</span><br><span class=\"line\">    runSequence = require(<span class=\"string\">'run-sequence'</span>),</span><br><span class=\"line\">    imagemin = require(<span class=\"string\">'gulp-imagemin'</span>),</span><br><span class=\"line\">    pngquant = require(<span class=\"string\">'imagemin-pngquant'</span>),</span><br><span class=\"line\">    gulpif = require(<span class=\"string\">'gulp-if'</span>),</span><br><span class=\"line\">    fs = require(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">var path = <span class=\"string\">\".build\"</span></span><br><span class=\"line\">var opt = &#123;</span><br><span class=\"line\">    backpath: path + <span class=\"string\">\"/back\"</span>,</span><br><span class=\"line\">    zippath: path + <span class=\"string\">\"/zip\"</span>,</span><br><span class=\"line\">    revpath: path + <span class=\"string\">\"/rev\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">opt.ziprevpath = opt.zippath + <span class=\"string\">\"/rev\"</span></span><br><span class=\"line\">///////////////////////////////////压缩////////////////////////////////////////////////////////</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"delrev\"</span>, <span class=\"keyword\">function</span>(cb) &#123;</span><br><span class=\"line\">    del(<span class=\"string\">'rev'</span>, &#123;</span><br><span class=\"line\">        force: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        cb();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"ziporiginal\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src([opt.zippath + <span class=\"string\">\"/**\"</span>, opt.zippath + <span class=\"string\">\"/*.*\"</span>])</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"copyrev\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src(opt.revpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\">        .pipe(gulp.dest(opt.ziprevpath))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"uglifyall\"</span>, <span class=\"keyword\">function</span>(cb) &#123;</span><br><span class=\"line\">    //如果有旧版本文件，就开始对比</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (zipbackdir_rev_status) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(<span class=\"string\">\"开始对比\"</span>);</span><br><span class=\"line\">        //得出对比后有的差异</span><br><span class=\"line\">        var obj = revCompared(opt.revpath + <span class=\"string\">\"/rev.json\"</span>, opt.ziprevpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.arr.length) &#123;</span><br><span class=\"line\">            console.log(<span class=\"string\">\"没有文件改变\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.del.arr.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (var i = 0; i &lt; obj.del.arr.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                //先检查一下，zipback里面是否还有这个文件，如果没有则跳过</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!fs.existsSync(opt.zippath + <span class=\"string\">\"/\"</span> + obj.del.arr[i])) &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                //走到这里说明有删除文件，开始走删除文件方法</span><br><span class=\"line\">                deldir(obj.del.arr[i])</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">function</span> deldir(url) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    //解析文件路径，从第一级开始比较，如果，第一级或是第二级。。。新文件里没有了。而老文件里有，说明要删除</span><br><span class=\"line\">                    urlarr = url.split(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                    var str = urlarr[0];</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (var i = 0; i &lt; urlarr.length; i++) &#123;</span><br><span class=\"line\">                        //得出文件夹转台</span><br><span class=\"line\">                        var dir = fs.existsSync(str)</span><br><span class=\"line\">                            //得出备份文件夹状态</span><br><span class=\"line\">                        var zip_dir = fs.existsSync(opt.zippath + <span class=\"string\">\"/\"</span> + str)</span><br><span class=\"line\">                            //如果新文件夹里没有。旧文件里有，说明是删除，则执行删除文件</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!dir &amp;&amp; zip_dir) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            console.log(<span class=\"string\">\"del：\"</span> + str)</span><br><span class=\"line\">                            del.sync(opt.zippath + <span class=\"string\">\"/\"</span> + str, &#123;</span><br><span class=\"line\">                                force: <span class=\"literal\">true</span></span><br><span class=\"line\">                            &#125;)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        //走到这一步说明新文件夹里有，则进入下一级目录</span><br><span class=\"line\">                        str += <span class=\"string\">\"/\"</span> + urlarr[i + 1]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                //如果删除文件后是空文件夹，应该把备份里的空文件夹也删除</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        //没有旧版本文件，就只读取新文件，然后执行</span><br><span class=\"line\">        console.log(<span class=\"string\">\"全量压缩\"</span>)</span><br><span class=\"line\">        var obj = revCompared(opt.revpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(obj.arr)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src(obj.arr, &#123;</span><br><span class=\"line\">            base: <span class=\"string\">\"./\"</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.js\"</span>, <span class=\"string\">\"**/*.js\"</span>, <span class=\"string\">\"!js/config**\"</span>], uglify()))</span><br><span class=\"line\">        .pipe(gulpif(<span class=\"string\">\"*.css\"</span>, minifyCss()))</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.html\"</span>], htmlmin(&#123; collapseWhitespace: <span class=\"literal\">true</span> &#125;)))</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.tpl\"</span>],htmlmin(&#123;collapseWhitespace: <span class=\"literal\">true</span>&#125;)))</span><br><span class=\"line\">        .pipe(gulpif(<span class=\"string\">\"*.jpg\"</span>, imagemin(&#123;</span><br><span class=\"line\">            progressive: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            svgoPlugins: [&#123;</span><br><span class=\"line\">                removeViewBox: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">            use: [pngquant()]</span><br><span class=\"line\">        &#125;)))</span><br><span class=\"line\">        .pipe(gulp.dest(opt.zippath));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//以上开始压缩js</span><br><span class=\"line\">//以下都是为了得出文件版本号</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"main_production\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">'js/main_production.js'</span>,opt.revpath+<span class=\"string\">'/rev.json'</span>])</span><br><span class=\"line\">            .pipe(concat(<span class=\"string\">\"main.js\"</span>))</span><br><span class=\"line\">            //.pipe(uglify())</span><br><span class=\"line\">            .pipe(gulp.dest(opt.zippath+<span class=\"string\">\"/js\"</span>))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"test\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        //<span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/wrap.tpl\"</span>])</span><br><span class=\"line\">        //<span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/header.tpl\"</span>])</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/menu.tpl\"</span>])</span><br><span class=\"line\">            .pipe(uglify())</span><br><span class=\"line\">            .pipe(gulp.dest(opt.zippath + <span class=\"string\">\"htmlmin\"</span>))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    //以上开始压缩js</span><br><span class=\"line\">    //以下都是为了得出文件版本号</span><br><span class=\"line\">    // gulp.task(<span class=\"string\">\"concatconfig\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    //     <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/config.production.js\"</span>, opt.revpath + <span class=\"string\">\"/rev.json\"</span>])</span><br><span class=\"line\">    //         .pipe(concat(<span class=\"string\">\"config.js\"</span>))</span><br><span class=\"line\">    //         .pipe(gulp.dest(opt.zippath + <span class=\"string\">\"/js\"</span>))</span><br><span class=\"line\">    // &#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"rev\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src(excludefile.concat(<span class=\"string\">'!js/main_production.js'</span>,<span class=\"string\">'!js/main.js'</span>))</span><br><span class=\"line\">            .pipe(rev())</span><br><span class=\"line\">            .pipe(rev.manifest(<span class=\"string\">\"rev.json\"</span>))</span><br><span class=\"line\">            .pipe(replace(&#123; //替换字符串</span><br><span class=\"line\">                patterns: [&#123;</span><br><span class=\"line\">                    match: /[<span class=\"string\">'|\"](.&#123;1,&#125;)['</span>|<span class=\"string\">\"].&#123;1,&#125;['|\"</span>].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;[<span class=\"string\">'|\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '</span><span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>:<span class=\"string\">\"<span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span>\"</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"js\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        var rev_static = gulp.src(\".rev/rev-static.json\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_style = gulp.src(\".rev/rev-style.json\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_tpl = gulp.src(\".rev/rev-tpl.json\");</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"*/**/*.*js\", \"*/*.*js\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_static</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_style</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_tpl</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(\"\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"rev-js.json\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['</span>|<span class=\"string\">\"](.&#123;1,&#125;)['|\"</span>].&#123;1,&#125;[<span class=\"string\">'|\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['</span>|<span class=\"string\">\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '\"</span><span class=\"variable\">$1</span><span class=\"string\">\":\"</span><span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span><span class=\"string\">\"'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>tpl<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        var rev_static = gulp.src(\"</span>.rev/rev-static.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_style = gulp.src(\"</span>.rev/rev-style.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"</span>*/**/*.*tpl<span class=\"string\">\", \"</span>*/*.*tpl<span class=\"string\">\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_static</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_style</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(\"</span><span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"</span>rev-tpl.json<span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['|\"</span>](.&#123;1,&#125;)[<span class=\"string\">'|\"].&#123;1,&#125;['</span>|<span class=\"string\">\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['|\"</span>]/g,</span><br><span class=\"line\">                    replacement: <span class=\"string\">'\"$1\":\"$1?v=$2\"'</span></span><br><span class=\"line\">                &#125;]</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\">            .pipe(gulp.dest(opt.revpath))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    //替换css里在的图片路径，并生成CSS版本号文件rev-style.json</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        var rev_static = gulp.src(opt.revpath + <span class=\"string\">\"/rev-static.json\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">'*/**/*.*css'</span>, <span class=\"string\">'*/*.*css'</span>])</span><br><span class=\"line\">            .pipe(revReplace(&#123;</span><br><span class=\"line\">                manifest: rev_static</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\">            .pipe(gulp.dest(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">            .pipe(rev())</span><br><span class=\"line\">            .pipe(rev.manifest(<span class=\"string\">\"rev-style.json\"</span>))</span><br><span class=\"line\">            .pipe(replace(&#123; //替换字符串</span><br><span class=\"line\">                patterns: [&#123;</span><br><span class=\"line\">                    match: /[<span class=\"string\">'|\"](.&#123;1,&#125;)['</span>|<span class=\"string\">\"].&#123;1,&#125;['|\"</span>].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;[<span class=\"string\">'|\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '</span><span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>:<span class=\"string\">\"<span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span>\"</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //生成所有静态资源版本号文件</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"static\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"*/**/*.!(*css|*js|*tpl)\", \"*/*.!(*css|*js|*tpl)\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"rev-static.json\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['</span>|<span class=\"string\">\"](.&#123;1,&#125;)['|\"</span>].&#123;1,&#125;[<span class=\"string\">'|\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['</span>|<span class=\"string\">\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '\"</span><span class=\"variable\">$1</span><span class=\"string\">\":\"</span><span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span><span class=\"string\">\"'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //压缩之前先把所有的文件备份一遍</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>copy<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return gulp.src(excludefile)</span></span><br><span class=\"line\"><span class=\"string\">        .pipe(gulp.dest(opt.backpath))</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">gulp.task('zip', function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    runSequence('copy', 'static', 'css', 'tpl', 'js', 'rev','main_production', 'uglifyall', \"</span>copyrev<span class=\"string\">\",  'ziporiginal','delrev', cb);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">function revCompared(newfile, oldfile) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    //文件对比。对比两个json版本文件。</span></span><br><span class=\"line\"><span class=\"string\">    //如果新文件里有，旧文件里没有，说明是新加</span></span><br><span class=\"line\"><span class=\"string\">    //如果旧文件里有，新文件里没有，说明是删除</span></span><br><span class=\"line\"><span class=\"string\">    //如果新文件里有，旧文件里也有，但不一样，说明文件内容有改变</span></span><br><span class=\"line\"><span class=\"string\">    //以上三种情况都会被添加到返回的对象中</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    //读取新版本文件</span></span><br><span class=\"line\"><span class=\"string\">    var rev = fs.readFileSync(newfile);</span></span><br><span class=\"line\"><span class=\"string\">    //新文件转化为json</span></span><br><span class=\"line\"><span class=\"string\">    var json_rev = JSON.parse(rev);</span></span><br><span class=\"line\"><span class=\"string\">    //返回的对象,存放所有对比结果</span></span><br><span class=\"line\"><span class=\"string\">    var obj = &#123;&#125;;</span></span><br><span class=\"line\"><span class=\"string\">    //存放新加、改动文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //存放新增文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.add = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.add.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.add.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //存放删除文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.del = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.del.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.del.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //只存放改动文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.change = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.change.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.change.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    //看是否有老版本文件</span></span><br><span class=\"line\"><span class=\"string\">    if (oldfile) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //读取老版本文件</span></span><br><span class=\"line\"><span class=\"string\">        var ziprev = fs.readFileSync(oldfile)</span></span><br><span class=\"line\"><span class=\"string\">            //老版本文件转为json</span></span><br><span class=\"line\"><span class=\"string\">        var json_ziprev = JSON.parse(ziprev)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        //先循环新版本文件，跟老版本文件进行文件版本对比</span></span><br><span class=\"line\"><span class=\"string\">        for (a in json_rev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            //如果老文件里面没有这个文件，说明是新增文件</span></span><br><span class=\"line\"><span class=\"string\">            if (!json_ziprev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                obj.add.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                obj.add.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                obj.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                obj.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\">                    //如果老文件有，但版本号不一样，说明内容有变动</span></span><br><span class=\"line\"><span class=\"string\">            &#125; else if (json_rev[a] != json_ziprev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                obj.change.arr.push(a);</span></span><br><span class=\"line\"><span class=\"string\">                obj.change.json[a] = json_rev[a];</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                obj.arr.push(a);</span></span><br><span class=\"line\"><span class=\"string\">                obj.json[a] = json_rev[a];</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;;</span></span><br><span class=\"line\"><span class=\"string\">        (function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">            //循环旧版本文件</span></span><br><span class=\"line\"><span class=\"string\">            for (a in json_ziprev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                //如果旧版本文件里有，新版本文件里没有则是删除</span></span><br><span class=\"line\"><span class=\"string\">                if (!json_rev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    //将改动的文件放入删除对象中</span></span><br><span class=\"line\"><span class=\"string\">                    obj.del.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                    obj.del.json[a] = json_ziprev[a]</span></span><br><span class=\"line\"><span class=\"string\">                &#125;</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;)();</span></span><br><span class=\"line\"><span class=\"string\">        return obj</span></span><br><span class=\"line\"><span class=\"string\">    &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //如果没有老版本文件，循环新版本文件。放入到对象中</span></span><br><span class=\"line\"><span class=\"string\">        for (a in json_rev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            obj.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">            obj.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        return obj</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">/////////////////////////////解压///////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"string\">//要还原之前，首先把原来的代码进行备份</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>zipback<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src(excludefile.concat(\"</span>!rev/**<span class=\"string\">\", \"</span>!rev*<span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.zippath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //压缩代码备份完之后，开始还原代码,这不是还原，这是覆盖，应该删除之前的所有文件夹，再还原。。。待改</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>recovery<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return gulp.src(opt.backpath + \"</span>/**<span class=\"string\">\")</span></span><br><span class=\"line\"><span class=\"string\">        .pipe(gulp.dest(\"</span><span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>delback<span class=\"string\">\", function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    del([opt.backpath], &#123;</span></span><br><span class=\"line\"><span class=\"string\">        force: true</span></span><br><span class=\"line\"><span class=\"string\">    &#125;).then(function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        cb();</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\">gulp.task('unzip', function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    runSequence('zipback', 'recovery', 'delback', cb);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">var gulpbackdir_status = fs.existsSync(opt.backpath)</span></span><br><span class=\"line\"><span class=\"string\">var zipbackdir_rev_status = fs.existsSync(opt.ziprevpath + \"</span>/rev.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">//跑脚本时忽略文件</span></span><br><span class=\"line\"><span class=\"string\">var excludefile = [\"</span>**<span class=\"string\">\",'!node_modules/**','!package.json', \"</span>!gulpfile.js<span class=\"string\">\", \"</span>!<span class=\"string\">\" + path + \"</span>/**<span class=\"string\">\", \"</span>!<span class=\"string\">\" + path + \"</span>**<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">var build;</span></span><br><span class=\"line\"><span class=\"string\">if (gulpbackdir_status) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    build = [\"</span>unzip<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">&#125; else &#123;</span></span><br><span class=\"line\"><span class=\"string\">    build = [\"</span>zip<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">//入口</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>default<span class=\"string\">\", build, function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    cb()</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>自己手动写了一个压缩脚本，主要实现了对比压缩，没有改变的文件不会压缩大大缩小了压缩时间<br>","more":"<br><img src=\"http://7xr7dg.com1.z0.glb.clouddn.com/hexoblog/images/gulp4.0.png\" alt=\"图片\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var gulp = require(<span class=\"string\">\"gulp\"</span>),</span><br><span class=\"line\">    del = require(<span class=\"string\">'del'</span>),</span><br><span class=\"line\">    rev = require(<span class=\"string\">\"gulp-rev\"</span>),</span><br><span class=\"line\">    revReplace = require(<span class=\"string\">\"gulp-rev-replace\"</span>),</span><br><span class=\"line\">    uglify = require(<span class=\"string\">\"gulp-uglify\"</span>),</span><br><span class=\"line\">    minifyCss = require(<span class=\"string\">'gulp-minify-css'</span>),</span><br><span class=\"line\">    concat = require(<span class=\"string\">'gulp-concat'</span>),</span><br><span class=\"line\">    replace = require(<span class=\"string\">'gulp-replace-task'</span>),</span><br><span class=\"line\">    htmlmin = require(<span class=\"string\">'gulp-htmlmin'</span>),</span><br><span class=\"line\">    runSequence = require(<span class=\"string\">'run-sequence'</span>),</span><br><span class=\"line\">    imagemin = require(<span class=\"string\">'gulp-imagemin'</span>),</span><br><span class=\"line\">    pngquant = require(<span class=\"string\">'imagemin-pngquant'</span>),</span><br><span class=\"line\">    gulpif = require(<span class=\"string\">'gulp-if'</span>),</span><br><span class=\"line\">    fs = require(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">var path = <span class=\"string\">\".build\"</span></span><br><span class=\"line\">var opt = &#123;</span><br><span class=\"line\">    backpath: path + <span class=\"string\">\"/back\"</span>,</span><br><span class=\"line\">    zippath: path + <span class=\"string\">\"/zip\"</span>,</span><br><span class=\"line\">    revpath: path + <span class=\"string\">\"/rev\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">opt.ziprevpath = opt.zippath + <span class=\"string\">\"/rev\"</span></span><br><span class=\"line\">///////////////////////////////////压缩////////////////////////////////////////////////////////</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"delrev\"</span>, <span class=\"keyword\">function</span>(cb) &#123;</span><br><span class=\"line\">    del(<span class=\"string\">'rev'</span>, &#123;</span><br><span class=\"line\">        force: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;).<span class=\"keyword\">then</span>(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        cb();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"ziporiginal\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src([opt.zippath + <span class=\"string\">\"/**\"</span>, opt.zippath + <span class=\"string\">\"/*.*\"</span>])</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"copyrev\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src(opt.revpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\">        .pipe(gulp.dest(opt.ziprevpath))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"uglifyall\"</span>, <span class=\"keyword\">function</span>(cb) &#123;</span><br><span class=\"line\">    //如果有旧版本文件，就开始对比</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (zipbackdir_rev_status) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        console.log(<span class=\"string\">\"开始对比\"</span>);</span><br><span class=\"line\">        //得出对比后有的差异</span><br><span class=\"line\">        var obj = revCompared(opt.revpath + <span class=\"string\">\"/rev.json\"</span>, opt.ziprevpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj.arr.length) &#123;</span><br><span class=\"line\">            console.log(<span class=\"string\">\"没有文件改变\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.del.arr.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (var i = 0; i &lt; obj.del.arr.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                //先检查一下，zipback里面是否还有这个文件，如果没有则跳过</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!fs.existsSync(opt.zippath + <span class=\"string\">\"/\"</span> + obj.del.arr[i])) &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                //走到这里说明有删除文件，开始走删除文件方法</span><br><span class=\"line\">                deldir(obj.del.arr[i])</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">function</span> deldir(url) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    //解析文件路径，从第一级开始比较，如果，第一级或是第二级。。。新文件里没有了。而老文件里有，说明要删除</span><br><span class=\"line\">                    urlarr = url.split(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                    var str = urlarr[0];</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (var i = 0; i &lt; urlarr.length; i++) &#123;</span><br><span class=\"line\">                        //得出文件夹转台</span><br><span class=\"line\">                        var dir = fs.existsSync(str)</span><br><span class=\"line\">                            //得出备份文件夹状态</span><br><span class=\"line\">                        var zip_dir = fs.existsSync(opt.zippath + <span class=\"string\">\"/\"</span> + str)</span><br><span class=\"line\">                            //如果新文件夹里没有。旧文件里有，说明是删除，则执行删除文件</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!dir &amp;&amp; zip_dir) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                            console.log(<span class=\"string\">\"del：\"</span> + str)</span><br><span class=\"line\">                            del.sync(opt.zippath + <span class=\"string\">\"/\"</span> + str, &#123;</span><br><span class=\"line\">                                force: <span class=\"literal\">true</span></span><br><span class=\"line\">                            &#125;)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        //走到这一步说明新文件夹里有，则进入下一级目录</span><br><span class=\"line\">                        str += <span class=\"string\">\"/\"</span> + urlarr[i + 1]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                //如果删除文件后是空文件夹，应该把备份里的空文件夹也删除</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        //没有旧版本文件，就只读取新文件，然后执行</span><br><span class=\"line\">        console.log(<span class=\"string\">\"全量压缩\"</span>)</span><br><span class=\"line\">        var obj = revCompared(opt.revpath + <span class=\"string\">\"/rev.json\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(obj.arr)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> gulp.src(obj.arr, &#123;</span><br><span class=\"line\">            base: <span class=\"string\">\"./\"</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.js\"</span>, <span class=\"string\">\"**/*.js\"</span>, <span class=\"string\">\"!js/config**\"</span>], uglify()))</span><br><span class=\"line\">        .pipe(gulpif(<span class=\"string\">\"*.css\"</span>, minifyCss()))</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.html\"</span>], htmlmin(&#123; collapseWhitespace: <span class=\"literal\">true</span> &#125;)))</span><br><span class=\"line\">        .pipe(gulpif([<span class=\"string\">\"*.tpl\"</span>],htmlmin(&#123;collapseWhitespace: <span class=\"literal\">true</span>&#125;)))</span><br><span class=\"line\">        .pipe(gulpif(<span class=\"string\">\"*.jpg\"</span>, imagemin(&#123;</span><br><span class=\"line\">            progressive: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            svgoPlugins: [&#123;</span><br><span class=\"line\">                removeViewBox: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">            use: [pngquant()]</span><br><span class=\"line\">        &#125;)))</span><br><span class=\"line\">        .pipe(gulp.dest(opt.zippath));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//以上开始压缩js</span><br><span class=\"line\">//以下都是为了得出文件版本号</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"main_production\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">'js/main_production.js'</span>,opt.revpath+<span class=\"string\">'/rev.json'</span>])</span><br><span class=\"line\">            .pipe(concat(<span class=\"string\">\"main.js\"</span>))</span><br><span class=\"line\">            //.pipe(uglify())</span><br><span class=\"line\">            .pipe(gulp.dest(opt.zippath+<span class=\"string\">\"/js\"</span>))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"test\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        //<span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/wrap.tpl\"</span>])</span><br><span class=\"line\">        //<span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/header.tpl\"</span>])</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/templates/base/menu.tpl\"</span>])</span><br><span class=\"line\">            .pipe(uglify())</span><br><span class=\"line\">            .pipe(gulp.dest(opt.zippath + <span class=\"string\">\"htmlmin\"</span>))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    //以上开始压缩js</span><br><span class=\"line\">    //以下都是为了得出文件版本号</span><br><span class=\"line\">    // gulp.task(<span class=\"string\">\"concatconfig\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">    //     <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">\"js/config.production.js\"</span>, opt.revpath + <span class=\"string\">\"/rev.json\"</span>])</span><br><span class=\"line\">    //         .pipe(concat(<span class=\"string\">\"config.js\"</span>))</span><br><span class=\"line\">    //         .pipe(gulp.dest(opt.zippath + <span class=\"string\">\"/js\"</span>))</span><br><span class=\"line\">    // &#125;)</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"rev\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src(excludefile.concat(<span class=\"string\">'!js/main_production.js'</span>,<span class=\"string\">'!js/main.js'</span>))</span><br><span class=\"line\">            .pipe(rev())</span><br><span class=\"line\">            .pipe(rev.manifest(<span class=\"string\">\"rev.json\"</span>))</span><br><span class=\"line\">            .pipe(replace(&#123; //替换字符串</span><br><span class=\"line\">                patterns: [&#123;</span><br><span class=\"line\">                    match: /[<span class=\"string\">'|\"](.&#123;1,&#125;)['</span>|<span class=\"string\">\"].&#123;1,&#125;['|\"</span>].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;[<span class=\"string\">'|\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '</span><span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>:<span class=\"string\">\"<span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span>\"</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"js\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        var rev_static = gulp.src(\".rev/rev-static.json\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_style = gulp.src(\".rev/rev-style.json\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_tpl = gulp.src(\".rev/rev-tpl.json\");</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"*/**/*.*js\", \"*/*.*js\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_static</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_style</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_tpl</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(\"\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"rev-js.json\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['</span>|<span class=\"string\">\"](.&#123;1,&#125;)['|\"</span>].&#123;1,&#125;[<span class=\"string\">'|\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['</span>|<span class=\"string\">\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '\"</span><span class=\"variable\">$1</span><span class=\"string\">\":\"</span><span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span><span class=\"string\">\"'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //图片，字体，样式都完成之后，开始替换js，再生成js文件版本号（注意这里只是生成js文件里js文件版本号，）</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>tpl<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        var rev_static = gulp.src(\"</span>.rev/rev-static.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">        var rev_style = gulp.src(\"</span>.rev/rev-style.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"</span>*/**/*.*tpl<span class=\"string\">\", \"</span>*/*.*tpl<span class=\"string\">\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_static</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(revReplace(&#123;</span></span><br><span class=\"line\"><span class=\"string\">                manifest: rev_style</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(\"</span><span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"</span>rev-tpl.json<span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['|\"</span>](.&#123;1,&#125;)[<span class=\"string\">'|\"].&#123;1,&#125;['</span>|<span class=\"string\">\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['|\"</span>]/g,</span><br><span class=\"line\">                    replacement: <span class=\"string\">'\"$1\":\"$1?v=$2\"'</span></span><br><span class=\"line\">                &#125;]</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\">            .pipe(gulp.dest(opt.revpath))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    //替换css里在的图片路径，并生成CSS版本号文件rev-style.json</span><br><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">        var rev_static = gulp.src(opt.revpath + <span class=\"string\">\"/rev-static.json\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> gulp.src([<span class=\"string\">'*/**/*.*css'</span>, <span class=\"string\">'*/*.*css'</span>])</span><br><span class=\"line\">            .pipe(revReplace(&#123;</span><br><span class=\"line\">                manifest: rev_static</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\">            .pipe(gulp.dest(<span class=\"string\">\"\"</span>))</span><br><span class=\"line\">            .pipe(rev())</span><br><span class=\"line\">            .pipe(rev.manifest(<span class=\"string\">\"rev-style.json\"</span>))</span><br><span class=\"line\">            .pipe(replace(&#123; //替换字符串</span><br><span class=\"line\">                patterns: [&#123;</span><br><span class=\"line\">                    match: /[<span class=\"string\">'|\"](.&#123;1,&#125;)['</span>|<span class=\"string\">\"].&#123;1,&#125;['|\"</span>].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;[<span class=\"string\">'|\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '</span><span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>:<span class=\"string\">\"<span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span>\"</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //生成所有静态资源版本号文件</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"static\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src([\"*/**/*.!(*css|*js|*tpl)\", \"*/*.!(*css|*js|*tpl)\"])</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev())</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(rev.manifest(\"rev-static.json\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(replace(&#123; //替换字符串</span></span><br><span class=\"line\"><span class=\"string\">                patterns: [&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    match: /['</span>|<span class=\"string\">\"](.&#123;1,&#125;)['|\"</span>].&#123;1,&#125;[<span class=\"string\">'|\"].*-&#123;1,&#125;?(.[^.]*).&#123;1,&#125;['</span>|<span class=\"string\">\"]/g,</span></span><br><span class=\"line\"><span class=\"string\">                    replacement: '\"</span><span class=\"variable\">$1</span><span class=\"string\">\":\"</span><span class=\"variable\">$1</span>?v=<span class=\"variable\">$2</span><span class=\"string\">\"'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;]</span></span><br><span class=\"line\"><span class=\"string\">            &#125;))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.revpath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //压缩之前先把所有的文件备份一遍</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>copy<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return gulp.src(excludefile)</span></span><br><span class=\"line\"><span class=\"string\">        .pipe(gulp.dest(opt.backpath))</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">gulp.task('zip', function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    runSequence('copy', 'static', 'css', 'tpl', 'js', 'rev','main_production', 'uglifyall', \"</span>copyrev<span class=\"string\">\",  'ziporiginal','delrev', cb);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">function revCompared(newfile, oldfile) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    //文件对比。对比两个json版本文件。</span></span><br><span class=\"line\"><span class=\"string\">    //如果新文件里有，旧文件里没有，说明是新加</span></span><br><span class=\"line\"><span class=\"string\">    //如果旧文件里有，新文件里没有，说明是删除</span></span><br><span class=\"line\"><span class=\"string\">    //如果新文件里有，旧文件里也有，但不一样，说明文件内容有改变</span></span><br><span class=\"line\"><span class=\"string\">    //以上三种情况都会被添加到返回的对象中</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    //读取新版本文件</span></span><br><span class=\"line\"><span class=\"string\">    var rev = fs.readFileSync(newfile);</span></span><br><span class=\"line\"><span class=\"string\">    //新文件转化为json</span></span><br><span class=\"line\"><span class=\"string\">    var json_rev = JSON.parse(rev);</span></span><br><span class=\"line\"><span class=\"string\">    //返回的对象,存放所有对比结果</span></span><br><span class=\"line\"><span class=\"string\">    var obj = &#123;&#125;;</span></span><br><span class=\"line\"><span class=\"string\">    //存放新加、改动文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //存放新增文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.add = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.add.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.add.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //存放删除文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.del = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.del.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.del.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        //只存放改动文件的对象</span></span><br><span class=\"line\"><span class=\"string\">    obj.change = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">    obj.change.arr = []</span></span><br><span class=\"line\"><span class=\"string\">    obj.change.json = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    //看是否有老版本文件</span></span><br><span class=\"line\"><span class=\"string\">    if (oldfile) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //读取老版本文件</span></span><br><span class=\"line\"><span class=\"string\">        var ziprev = fs.readFileSync(oldfile)</span></span><br><span class=\"line\"><span class=\"string\">            //老版本文件转为json</span></span><br><span class=\"line\"><span class=\"string\">        var json_ziprev = JSON.parse(ziprev)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        //先循环新版本文件，跟老版本文件进行文件版本对比</span></span><br><span class=\"line\"><span class=\"string\">        for (a in json_rev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            //如果老文件里面没有这个文件，说明是新增文件</span></span><br><span class=\"line\"><span class=\"string\">            if (!json_ziprev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                obj.add.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                obj.add.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                obj.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                obj.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\">                    //如果老文件有，但版本号不一样，说明内容有变动</span></span><br><span class=\"line\"><span class=\"string\">            &#125; else if (json_rev[a] != json_ziprev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                obj.change.arr.push(a);</span></span><br><span class=\"line\"><span class=\"string\">                obj.change.json[a] = json_rev[a];</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                obj.arr.push(a);</span></span><br><span class=\"line\"><span class=\"string\">                obj.json[a] = json_rev[a];</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;;</span></span><br><span class=\"line\"><span class=\"string\">        (function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">            //循环旧版本文件</span></span><br><span class=\"line\"><span class=\"string\">            for (a in json_ziprev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                //如果旧版本文件里有，新版本文件里没有则是删除</span></span><br><span class=\"line\"><span class=\"string\">                if (!json_rev[a]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    //将改动的文件放入删除对象中</span></span><br><span class=\"line\"><span class=\"string\">                    obj.del.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">                    obj.del.json[a] = json_ziprev[a]</span></span><br><span class=\"line\"><span class=\"string\">                &#125;</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;)();</span></span><br><span class=\"line\"><span class=\"string\">        return obj</span></span><br><span class=\"line\"><span class=\"string\">    &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //如果没有老版本文件，循环新版本文件。放入到对象中</span></span><br><span class=\"line\"><span class=\"string\">        for (a in json_rev) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            obj.arr.push(a)</span></span><br><span class=\"line\"><span class=\"string\">            obj.json[a] = json_rev[a]</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        return obj</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">/////////////////////////////解压///////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"string\">//要还原之前，首先把原来的代码进行备份</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>zipback<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return gulp.src(excludefile.concat(\"</span>!rev/**<span class=\"string\">\", \"</span>!rev*<span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">            .pipe(gulp.dest(opt.zippath))</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    //压缩代码备份完之后，开始还原代码,这不是还原，这是覆盖，应该删除之前的所有文件夹，再还原。。。待改</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>recovery<span class=\"string\">\", function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return gulp.src(opt.backpath + \"</span>/**<span class=\"string\">\")</span></span><br><span class=\"line\"><span class=\"string\">        .pipe(gulp.dest(\"</span><span class=\"string\">\"))</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>delback<span class=\"string\">\", function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    del([opt.backpath], &#123;</span></span><br><span class=\"line\"><span class=\"string\">        force: true</span></span><br><span class=\"line\"><span class=\"string\">    &#125;).then(function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        cb();</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&#125;)</span></span><br><span class=\"line\"><span class=\"string\">gulp.task('unzip', function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    runSequence('zipback', 'recovery', 'delback', cb);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">var gulpbackdir_status = fs.existsSync(opt.backpath)</span></span><br><span class=\"line\"><span class=\"string\">var zipbackdir_rev_status = fs.existsSync(opt.ziprevpath + \"</span>/rev.json<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">//跑脚本时忽略文件</span></span><br><span class=\"line\"><span class=\"string\">var excludefile = [\"</span>**<span class=\"string\">\",'!node_modules/**','!package.json', \"</span>!gulpfile.js<span class=\"string\">\", \"</span>!<span class=\"string\">\" + path + \"</span>/**<span class=\"string\">\", \"</span>!<span class=\"string\">\" + path + \"</span>**<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">var build;</span></span><br><span class=\"line\"><span class=\"string\">if (gulpbackdir_status) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    build = [\"</span>unzip<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">&#125; else &#123;</span></span><br><span class=\"line\"><span class=\"string\">    build = [\"</span>zip<span class=\"string\">\"]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">//入口</span></span><br><span class=\"line\"><span class=\"string\">gulp.task(\"</span>default<span class=\"string\">\", build, function(cb) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    cb()</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure></p>"},{"title":"hexo各种设置","_content":"[主题设置](https://www.haomwei.com/technology/maupassant-hexo.html)\n[hexo-themes-next官网教程](http://theme-next.iissnan.com/tag-plugins.html)\n[hexo里使用图床](http://error408.com/2016/08/02/Hexo%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8/)\n","source":"_posts/hexo/hexo各种设置.md","raw":"---\ntitle: hexo各种设置\ntags: [hexo]\n---\n[主题设置](https://www.haomwei.com/technology/maupassant-hexo.html)\n[hexo-themes-next官网教程](http://theme-next.iissnan.com/tag-plugins.html)\n[hexo里使用图床](http://error408.com/2016/08/02/Hexo%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8/)\n","slug":"hexo/hexo各种设置","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5pr000bzoxpoto7kpnh","content":"<p><a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\" target=\"_blank\" rel=\"noopener\">主题设置</a><br><a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">hexo-themes-next官网教程</a><br><a href=\"http://error408.com/2016/08/02/Hexo%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">hexo里使用图床</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\" target=\"_blank\" rel=\"noopener\">主题设置</a><br><a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">hexo-themes-next官网教程</a><br><a href=\"http://error408.com/2016/08/02/Hexo%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">hexo里使用图床</a></p>\n"},{"title":"js手动触发addEventListener","_content":"\n# js 中 document.createEvent的用法-转载\n\njs 中 document.createEvent的用法\n\n<a class=\"comment-mod\" onclick=\"alert('ss')\" href=\"#\">评论</a>\n\n如果用户直接查看文章列表，那么所有的评论以及评论框都是不显示的，但是如果用户通过别的页面比如首页的个人动态直接定位到这篇日志，那么评论就应该全部显示。而列表页和查看单个条目的页面是同一个页面，这就要求我判断一下用户是否定位到该篇日志，如果是，就通过JS来触发 A 标签的点击事件。\n\n一开始我尝试了一些方法，想当然地以为 A 标签和按钮一样是有 onclick() 事件的，结果发现没有，后来从网上搜了一些资料之后，成功解决了这个问题^_^ 。解决办法是针对 IE 和 FF编写不同的逻辑，部分代码如下：\n<script>\n var comment = document.getElementsByTagName('a')[0];\n \nif (document.all) {\n // For IE\n\n comment.click();\n\n} else if (document.createEvent) {\n   //FOR DOM2\nvar ev = document.createEvent('HTMLEvents');\n\n ev.initEvent('click', false, true);\n comment.dispatchEvent(ev);\n} \n</script>\n\n   \n\n语法：\n\ncreateEvent(eventType)\n\n参数\n\n描述\n\neventType\n\n想获取的 Event 对象的事件模块名。\n\n关于有效的事件类型列表，请参阅\"说明\"部分。\n\n返回值\n\n返回新创建的 Event 对象，具有指定的类型。\n\n抛出\n\n如果实现支持需要的事件类型，该方法将抛出代码为 NOT_SUPPORTED_ERR 的 DOMException 异常。\n\n说明\n\n该方法将创建一种新的事件类型，该类型由参数 eventType 指定。注意，该参数的值不是要创建的事件接口的名称，而是定义那个接口的 DOM 模块的名称。\n\n下表列出了 eventType 的合法值和每个值创建的事件接口：\n\n参数\n\n事件接口\n\n初始化方法\n\nHTMLEvents\n\nHTMLEvent\n\niniEvent()\n\nMouseEvents\n\nMouseEvent\n\niniMouseEvent()\n\nUIEvents\n\nUIEvent\n\niniUIEvent()\n\n用该方法创建了 Event 对象以后，必须用上表中所示的初始化方法初始化对象。关于初始化方法的详细信息，请参阅 Event 对象参考。\n\n该方法实际上不是由 Document 接口定义的，而是由 DocumentEvent 接口定义的。如果一个实现支持 Event 模块，那么 Document 对象就会实现 DocumentEvent 接口并支持该方法。","source":"_posts/js/手动触发addeventListener.md","raw":"---\ntitle: js手动触发addEventListener\ntags: [javascript]\n---\n\n# js 中 document.createEvent的用法-转载\n\njs 中 document.createEvent的用法\n\n<a class=\"comment-mod\" onclick=\"alert('ss')\" href=\"#\">评论</a>\n\n如果用户直接查看文章列表，那么所有的评论以及评论框都是不显示的，但是如果用户通过别的页面比如首页的个人动态直接定位到这篇日志，那么评论就应该全部显示。而列表页和查看单个条目的页面是同一个页面，这就要求我判断一下用户是否定位到该篇日志，如果是，就通过JS来触发 A 标签的点击事件。\n\n一开始我尝试了一些方法，想当然地以为 A 标签和按钮一样是有 onclick() 事件的，结果发现没有，后来从网上搜了一些资料之后，成功解决了这个问题^_^ 。解决办法是针对 IE 和 FF编写不同的逻辑，部分代码如下：\n<script>\n var comment = document.getElementsByTagName('a')[0];\n \nif (document.all) {\n // For IE\n\n comment.click();\n\n} else if (document.createEvent) {\n   //FOR DOM2\nvar ev = document.createEvent('HTMLEvents');\n\n ev.initEvent('click', false, true);\n comment.dispatchEvent(ev);\n} \n</script>\n\n   \n\n语法：\n\ncreateEvent(eventType)\n\n参数\n\n描述\n\neventType\n\n想获取的 Event 对象的事件模块名。\n\n关于有效的事件类型列表，请参阅\"说明\"部分。\n\n返回值\n\n返回新创建的 Event 对象，具有指定的类型。\n\n抛出\n\n如果实现支持需要的事件类型，该方法将抛出代码为 NOT_SUPPORTED_ERR 的 DOMException 异常。\n\n说明\n\n该方法将创建一种新的事件类型，该类型由参数 eventType 指定。注意，该参数的值不是要创建的事件接口的名称，而是定义那个接口的 DOM 模块的名称。\n\n下表列出了 eventType 的合法值和每个值创建的事件接口：\n\n参数\n\n事件接口\n\n初始化方法\n\nHTMLEvents\n\nHTMLEvent\n\niniEvent()\n\nMouseEvents\n\nMouseEvent\n\niniMouseEvent()\n\nUIEvents\n\nUIEvent\n\niniUIEvent()\n\n用该方法创建了 Event 对象以后，必须用上表中所示的初始化方法初始化对象。关于初始化方法的详细信息，请参阅 Event 对象参考。\n\n该方法实际上不是由 Document 接口定义的，而是由 DocumentEvent 接口定义的。如果一个实现支持 Event 模块，那么 Document 对象就会实现 DocumentEvent 接口并支持该方法。","slug":"js/手动触发addeventListener","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5ps000dzoxptm66k8ss","content":"<h1 id=\"js-中-document-createEvent的用法-转载\"><a href=\"#js-中-document-createEvent的用法-转载\" class=\"headerlink\" title=\"js 中 document.createEvent的用法-转载\"></a>js 中 document.createEvent的用法-转载</h1><p>js 中 document.createEvent的用法</p>\n<p><a class=\"comment-mod\" onclick=\"alert('ss')\" href=\"#\">评论</a></p>\n<p>如果用户直接查看文章列表，那么所有的评论以及评论框都是不显示的，但是如果用户通过别的页面比如首页的个人动态直接定位到这篇日志，那么评论就应该全部显示。而列表页和查看单个条目的页面是同一个页面，这就要求我判断一下用户是否定位到该篇日志，如果是，就通过JS来触发 A 标签的点击事件。</p>\n<p>一开始我尝试了一些方法，想当然地以为 A 标签和按钮一样是有 onclick() 事件的，结果发现没有，后来从网上搜了一些资料之后，成功解决了这个问题^_^ 。解决办法是针对 IE 和 FF编写不同的逻辑，部分代码如下：</p>\n<script>\n var comment = document.getElementsByTagName('a')[0];\n\nif (document.all) {\n // For IE\n\n comment.click();\n\n} else if (document.createEvent) {\n   //FOR DOM2\nvar ev = document.createEvent('HTMLEvents');\n\n ev.initEvent('click', false, true);\n comment.dispatchEvent(ev);\n} \n</script>\n\n\n\n<p>语法：</p>\n<p>createEvent(eventType)</p>\n<p>参数</p>\n<p>描述</p>\n<p>eventType</p>\n<p>想获取的 Event 对象的事件模块名。</p>\n<p>关于有效的事件类型列表，请参阅”说明”部分。</p>\n<p>返回值</p>\n<p>返回新创建的 Event 对象，具有指定的类型。</p>\n<p>抛出</p>\n<p>如果实现支持需要的事件类型，该方法将抛出代码为 NOT_SUPPORTED_ERR 的 DOMException 异常。</p>\n<p>说明</p>\n<p>该方法将创建一种新的事件类型，该类型由参数 eventType 指定。注意，该参数的值不是要创建的事件接口的名称，而是定义那个接口的 DOM 模块的名称。</p>\n<p>下表列出了 eventType 的合法值和每个值创建的事件接口：</p>\n<p>参数</p>\n<p>事件接口</p>\n<p>初始化方法</p>\n<p>HTMLEvents</p>\n<p>HTMLEvent</p>\n<p>iniEvent()</p>\n<p>MouseEvents</p>\n<p>MouseEvent</p>\n<p>iniMouseEvent()</p>\n<p>UIEvents</p>\n<p>UIEvent</p>\n<p>iniUIEvent()</p>\n<p>用该方法创建了 Event 对象以后，必须用上表中所示的初始化方法初始化对象。关于初始化方法的详细信息，请参阅 Event 对象参考。</p>\n<p>该方法实际上不是由 Document 接口定义的，而是由 DocumentEvent 接口定义的。如果一个实现支持 Event 模块，那么 Document 对象就会实现 DocumentEvent 接口并支持该方法。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"js-中-document-createEvent的用法-转载\"><a href=\"#js-中-document-createEvent的用法-转载\" class=\"headerlink\" title=\"js 中 document.createEvent的用法-转载\"></a>js 中 document.createEvent的用法-转载</h1><p>js 中 document.createEvent的用法</p>\n<p><a class=\"comment-mod\" onclick=\"alert('ss')\" href=\"#\">评论</a></p>\n<p>如果用户直接查看文章列表，那么所有的评论以及评论框都是不显示的，但是如果用户通过别的页面比如首页的个人动态直接定位到这篇日志，那么评论就应该全部显示。而列表页和查看单个条目的页面是同一个页面，这就要求我判断一下用户是否定位到该篇日志，如果是，就通过JS来触发 A 标签的点击事件。</p>\n<p>一开始我尝试了一些方法，想当然地以为 A 标签和按钮一样是有 onclick() 事件的，结果发现没有，后来从网上搜了一些资料之后，成功解决了这个问题^_^ 。解决办法是针对 IE 和 FF编写不同的逻辑，部分代码如下：</p>\n<script>\n var comment = document.getElementsByTagName('a')[0];\n\nif (document.all) {\n // For IE\n\n comment.click();\n\n} else if (document.createEvent) {\n   //FOR DOM2\nvar ev = document.createEvent('HTMLEvents');\n\n ev.initEvent('click', false, true);\n comment.dispatchEvent(ev);\n} \n</script>\n\n\n\n<p>语法：</p>\n<p>createEvent(eventType)</p>\n<p>参数</p>\n<p>描述</p>\n<p>eventType</p>\n<p>想获取的 Event 对象的事件模块名。</p>\n<p>关于有效的事件类型列表，请参阅”说明”部分。</p>\n<p>返回值</p>\n<p>返回新创建的 Event 对象，具有指定的类型。</p>\n<p>抛出</p>\n<p>如果实现支持需要的事件类型，该方法将抛出代码为 NOT_SUPPORTED_ERR 的 DOMException 异常。</p>\n<p>说明</p>\n<p>该方法将创建一种新的事件类型，该类型由参数 eventType 指定。注意，该参数的值不是要创建的事件接口的名称，而是定义那个接口的 DOM 模块的名称。</p>\n<p>下表列出了 eventType 的合法值和每个值创建的事件接口：</p>\n<p>参数</p>\n<p>事件接口</p>\n<p>初始化方法</p>\n<p>HTMLEvents</p>\n<p>HTMLEvent</p>\n<p>iniEvent()</p>\n<p>MouseEvents</p>\n<p>MouseEvent</p>\n<p>iniMouseEvent()</p>\n<p>UIEvents</p>\n<p>UIEvent</p>\n<p>iniUIEvent()</p>\n<p>用该方法创建了 Event 对象以后，必须用上表中所示的初始化方法初始化对象。关于初始化方法的详细信息，请参阅 Event 对象参考。</p>\n<p>该方法实际上不是由 Document 接口定义的，而是由 DocumentEvent 接口定义的。如果一个实现支持 Event 模块，那么 Document 对象就会实现 DocumentEvent 接口并支持该方法。</p>\n"},{"title":"sublime插件整理","_content":"# sass\n# less\n# babel\n# emmet\n* emmet jsx\n// add to Preferences > Key Bindings - User\n// see http://stackoverflow.com/a/26619524 for context\n```\n{ \"keys\": [\"tab\"], \"command\": \"expand_abbreviation_by_tab\",\n  \"context\": [\n    {\n      \"operand\": \"source.js\", \n      \"operator\": \"equal\", \n      \"match_all\": true, \n      \"key\": \"selector\"\n    },\n    {   \n      \"key\": \"selection_empty\", \n      \"operator\": \"equal\", \n      \"operand\": true,\n      \"match_all\": true \n    }\n  ]\n},\n{ \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n  [\n    { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n  ]\n}\n```\nsublime 显示空格和制表符\nPreferences->Settings-User\n\"draw_white_space\": \"all\"\n\n# 符号高亮\n* Bracket​Highlighter\n\n# 扩展右键菜单\n* SideBarEnhancements\n\n# 语法检查\n* Sublime​Linter\n* SublimeLinter-contrib-eslint\n* ESLint-Formatter\n\n# js提示\n* JavaScript Completions\n\n# 自动提示文件名\n* AutoFileName\n\n# 文件图标\n* A File Icon\n\n# markdown 预览\n* Markdown Extended\n\n# 不同的编辑器之间保持一致的编码风格\n* EditorConfig","source":"_posts/工具/sublime插件.md","raw":"---\ntitle: sublime插件整理\ntags: [sbulime,插件]\n---\n# sass\n# less\n# babel\n# emmet\n* emmet jsx\n// add to Preferences > Key Bindings - User\n// see http://stackoverflow.com/a/26619524 for context\n```\n{ \"keys\": [\"tab\"], \"command\": \"expand_abbreviation_by_tab\",\n  \"context\": [\n    {\n      \"operand\": \"source.js\", \n      \"operator\": \"equal\", \n      \"match_all\": true, \n      \"key\": \"selector\"\n    },\n    {   \n      \"key\": \"selection_empty\", \n      \"operator\": \"equal\", \n      \"operand\": true,\n      \"match_all\": true \n    }\n  ]\n},\n{ \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n  [\n    { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n  ]\n}\n```\nsublime 显示空格和制表符\nPreferences->Settings-User\n\"draw_white_space\": \"all\"\n\n# 符号高亮\n* Bracket​Highlighter\n\n# 扩展右键菜单\n* SideBarEnhancements\n\n# 语法检查\n* Sublime​Linter\n* SublimeLinter-contrib-eslint\n* ESLint-Formatter\n\n# js提示\n* JavaScript Completions\n\n# 自动提示文件名\n* AutoFileName\n\n# 文件图标\n* A File Icon\n\n# markdown 预览\n* Markdown Extended\n\n# 不同的编辑器之间保持一致的编码风格\n* EditorConfig","slug":"工具/sublime插件","published":1,"date":"2017-12-16T08:59:10.460Z","updated":"2017-12-16T09:01:15.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5pu000fzoxpy2895y9w","content":"<h1 id=\"sass\"><a href=\"#sass\" class=\"headerlink\" title=\"sass\"></a>sass</h1><h1 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h1><h1 id=\"babel\"><a href=\"#babel\" class=\"headerlink\" title=\"babel\"></a>babel</h1><h1 id=\"emmet\"><a href=\"#emmet\" class=\"headerlink\" title=\"emmet\"></a>emmet</h1><ul>\n<li>emmet jsx<br>// add to Preferences &gt; Key Bindings - User<br>// see <a href=\"http://stackoverflow.com/a/26619524\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/a/26619524</a> for context<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;keys&quot;: [&quot;tab&quot;], &quot;command&quot;: &quot;expand_abbreviation_by_tab&quot;,</span><br><span class=\"line\">  &quot;context&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;operand&quot;: &quot;source.js&quot;, </span><br><span class=\"line\">      &quot;operator&quot;: &quot;equal&quot;, </span><br><span class=\"line\">      &quot;match_all&quot;: true, </span><br><span class=\"line\">      &quot;key&quot;: &quot;selector&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">      &quot;key&quot;: &quot;selection_empty&quot;, </span><br><span class=\"line\">      &quot;operator&quot;: &quot;equal&quot;, </span><br><span class=\"line\">      &quot;operand&quot;: true,</span><br><span class=\"line\">      &quot;match_all&quot;: true </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123; &quot;keys&quot;: [&quot;tab&quot;], &quot;command&quot;: &quot;next_field&quot;, &quot;context&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    &#123; &quot;key&quot;: &quot;has_next_field&quot;, &quot;operator&quot;: &quot;equal&quot;, &quot;operand&quot;: true &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>sublime 显示空格和制表符<br>Preferences-&gt;Settings-User<br>“draw_white_space”: “all”</p>\n<h1 id=\"符号高亮\"><a href=\"#符号高亮\" class=\"headerlink\" title=\"符号高亮\"></a>符号高亮</h1><ul>\n<li>Bracket​Highlighter</li>\n</ul>\n<h1 id=\"扩展右键菜单\"><a href=\"#扩展右键菜单\" class=\"headerlink\" title=\"扩展右键菜单\"></a>扩展右键菜单</h1><ul>\n<li>SideBarEnhancements</li>\n</ul>\n<h1 id=\"语法检查\"><a href=\"#语法检查\" class=\"headerlink\" title=\"语法检查\"></a>语法检查</h1><ul>\n<li>Sublime​Linter</li>\n<li>SublimeLinter-contrib-eslint</li>\n<li>ESLint-Formatter</li>\n</ul>\n<h1 id=\"js提示\"><a href=\"#js提示\" class=\"headerlink\" title=\"js提示\"></a>js提示</h1><ul>\n<li>JavaScript Completions</li>\n</ul>\n<h1 id=\"自动提示文件名\"><a href=\"#自动提示文件名\" class=\"headerlink\" title=\"自动提示文件名\"></a>自动提示文件名</h1><ul>\n<li>AutoFileName</li>\n</ul>\n<h1 id=\"文件图标\"><a href=\"#文件图标\" class=\"headerlink\" title=\"文件图标\"></a>文件图标</h1><ul>\n<li>A File Icon</li>\n</ul>\n<h1 id=\"markdown-预览\"><a href=\"#markdown-预览\" class=\"headerlink\" title=\"markdown 预览\"></a>markdown 预览</h1><ul>\n<li>Markdown Extended</li>\n</ul>\n<h1 id=\"不同的编辑器之间保持一致的编码风格\"><a href=\"#不同的编辑器之间保持一致的编码风格\" class=\"headerlink\" title=\"不同的编辑器之间保持一致的编码风格\"></a>不同的编辑器之间保持一致的编码风格</h1><ul>\n<li>EditorConfig</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"sass\"><a href=\"#sass\" class=\"headerlink\" title=\"sass\"></a>sass</h1><h1 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h1><h1 id=\"babel\"><a href=\"#babel\" class=\"headerlink\" title=\"babel\"></a>babel</h1><h1 id=\"emmet\"><a href=\"#emmet\" class=\"headerlink\" title=\"emmet\"></a>emmet</h1><ul>\n<li>emmet jsx<br>// add to Preferences &gt; Key Bindings - User<br>// see <a href=\"http://stackoverflow.com/a/26619524\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/a/26619524</a> for context<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;keys&quot;: [&quot;tab&quot;], &quot;command&quot;: &quot;expand_abbreviation_by_tab&quot;,</span><br><span class=\"line\">  &quot;context&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;operand&quot;: &quot;source.js&quot;, </span><br><span class=\"line\">      &quot;operator&quot;: &quot;equal&quot;, </span><br><span class=\"line\">      &quot;match_all&quot;: true, </span><br><span class=\"line\">      &quot;key&quot;: &quot;selector&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">      &quot;key&quot;: &quot;selection_empty&quot;, </span><br><span class=\"line\">      &quot;operator&quot;: &quot;equal&quot;, </span><br><span class=\"line\">      &quot;operand&quot;: true,</span><br><span class=\"line\">      &quot;match_all&quot;: true </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123; &quot;keys&quot;: [&quot;tab&quot;], &quot;command&quot;: &quot;next_field&quot;, &quot;context&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    &#123; &quot;key&quot;: &quot;has_next_field&quot;, &quot;operator&quot;: &quot;equal&quot;, &quot;operand&quot;: true &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>sublime 显示空格和制表符<br>Preferences-&gt;Settings-User<br>“draw_white_space”: “all”</p>\n<h1 id=\"符号高亮\"><a href=\"#符号高亮\" class=\"headerlink\" title=\"符号高亮\"></a>符号高亮</h1><ul>\n<li>Bracket​Highlighter</li>\n</ul>\n<h1 id=\"扩展右键菜单\"><a href=\"#扩展右键菜单\" class=\"headerlink\" title=\"扩展右键菜单\"></a>扩展右键菜单</h1><ul>\n<li>SideBarEnhancements</li>\n</ul>\n<h1 id=\"语法检查\"><a href=\"#语法检查\" class=\"headerlink\" title=\"语法检查\"></a>语法检查</h1><ul>\n<li>Sublime​Linter</li>\n<li>SublimeLinter-contrib-eslint</li>\n<li>ESLint-Formatter</li>\n</ul>\n<h1 id=\"js提示\"><a href=\"#js提示\" class=\"headerlink\" title=\"js提示\"></a>js提示</h1><ul>\n<li>JavaScript Completions</li>\n</ul>\n<h1 id=\"自动提示文件名\"><a href=\"#自动提示文件名\" class=\"headerlink\" title=\"自动提示文件名\"></a>自动提示文件名</h1><ul>\n<li>AutoFileName</li>\n</ul>\n<h1 id=\"文件图标\"><a href=\"#文件图标\" class=\"headerlink\" title=\"文件图标\"></a>文件图标</h1><ul>\n<li>A File Icon</li>\n</ul>\n<h1 id=\"markdown-预览\"><a href=\"#markdown-预览\" class=\"headerlink\" title=\"markdown 预览\"></a>markdown 预览</h1><ul>\n<li>Markdown Extended</li>\n</ul>\n<h1 id=\"不同的编辑器之间保持一致的编码风格\"><a href=\"#不同的编辑器之间保持一致的编码风格\" class=\"headerlink\" title=\"不同的编辑器之间保持一致的编码风格\"></a>不同的编辑器之间保持一致的编码风格</h1><ul>\n<li>EditorConfig</li>\n</ul>\n"},{"title":"Window Tidy：窗口定位魔术师","_content":"\n由于本人一向“喜新厌旧”的性格，导致前一阵子超爱的窗口工具Cinch也被我弃用了，现在又换成了Window Tidy，选择WT的原因是这款软件自带灵活的Grid模式，这样能随意定义窗口大小，再加上不限数量的Layout（布局模式），让多个窗口各据其位，互不干扰，帮我解决了许多排窗口的工作。\n以下是演示视频\n<embed src='http://player.youku.com/player.php/sid/XMzI2NTE0NDky/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>","source":"_posts/工具/windowTidy.md","raw":"---\ntitle: Window Tidy：窗口定位魔术师\ntags: [工具]\n---\n\n由于本人一向“喜新厌旧”的性格，导致前一阵子超爱的窗口工具Cinch也被我弃用了，现在又换成了Window Tidy，选择WT的原因是这款软件自带灵活的Grid模式，这样能随意定义窗口大小，再加上不限数量的Layout（布局模式），让多个窗口各据其位，互不干扰，帮我解决了许多排窗口的工作。\n以下是演示视频\n<embed src='http://player.youku.com/player.php/sid/XMzI2NTE0NDky/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>","slug":"工具/windowTidy","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5pv000gzoxpi1a34suv","content":"<p>由于本人一向“喜新厌旧”的性格，导致前一阵子超爱的窗口工具Cinch也被我弃用了，现在又换成了Window Tidy，选择WT的原因是这款软件自带灵活的Grid模式，这样能随意定义窗口大小，再加上不限数量的Layout（布局模式），让多个窗口各据其位，互不干扰，帮我解决了许多排窗口的工作。<br>以下是演示视频</p>\n<embed src=\"http://player.youku.com/player.php/sid/XMzI2NTE0NDky/v.swf\" allowfullscreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\">","site":{"data":{}},"excerpt":"","more":"<p>由于本人一向“喜新厌旧”的性格，导致前一阵子超爱的窗口工具Cinch也被我弃用了，现在又换成了Window Tidy，选择WT的原因是这款软件自带灵活的Grid模式，这样能随意定义窗口大小，再加上不限数量的Layout（布局模式），让多个窗口各据其位，互不干扰，帮我解决了许多排窗口的工作。<br>以下是演示视频</p>\n<embed src=\"http://player.youku.com/player.php/sid/XMzI2NTE0NDky/v.swf\" allowfullscreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\">"},{"title":"免费VPN推荐","_content":"免费VPN\n[下载地址：蓝灯](https://github.com/getlantern/forum/issues/833)  google赞助的，支持各种移动端，不用任何账号设置。直接上网（推荐）\n\n\n[下载地址：ishadowsocks](https://www.ishadowsocks.biz/)这也是一个免费的，不过要设置账号密码，六个小时一换，速度也没有蓝灯快，优点是官网没有被墙，打开无障碍，如果蓝灯下载不下来，可以先用这个过渡\n","source":"_posts/工具/翻墙.md","raw":"---\ntitle: 免费VPN推荐\ntags: [vpn]\n---\n免费VPN\n[下载地址：蓝灯](https://github.com/getlantern/forum/issues/833)  google赞助的，支持各种移动端，不用任何账号设置。直接上网（推荐）\n\n\n[下载地址：ishadowsocks](https://www.ishadowsocks.biz/)这也是一个免费的，不过要设置账号密码，六个小时一换，速度也没有蓝灯快，优点是官网没有被墙，打开无障碍，如果蓝灯下载不下来，可以先用这个过渡\n","slug":"工具/翻墙","published":1,"date":"2017-09-09T03:17:49.000Z","updated":"2017-09-09T03:17:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjb96s5px000jzoxpjvuq0nzf","content":"<p>免费VPN<br><a href=\"https://github.com/getlantern/forum/issues/833\" target=\"_blank\" rel=\"noopener\">下载地址：蓝灯</a>  google赞助的，支持各种移动端，不用任何账号设置。直接上网（推荐）</p>\n<p><a href=\"https://www.ishadowsocks.biz/\" target=\"_blank\" rel=\"noopener\">下载地址：ishadowsocks</a>这也是一个免费的，不过要设置账号密码，六个小时一换，速度也没有蓝灯快，优点是官网没有被墙，打开无障碍，如果蓝灯下载不下来，可以先用这个过渡</p>\n","site":{"data":{}},"excerpt":"","more":"<p>免费VPN<br><a href=\"https://github.com/getlantern/forum/issues/833\" target=\"_blank\" rel=\"noopener\">下载地址：蓝灯</a>  google赞助的，支持各种移动端，不用任何账号设置。直接上网（推荐）</p>\n<p><a href=\"https://www.ishadowsocks.biz/\" target=\"_blank\" rel=\"noopener\">下载地址：ishadowsocks</a>这也是一个免费的，不过要设置账号密码，六个小时一换，速度也没有蓝灯快，优点是官网没有被墙，打开无障碍，如果蓝灯下载不下来，可以先用这个过渡</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjb96s5ja0001zoxpl0ngmbv3","tag_id":"cjb96s5jh0004zoxpqe1k8bzr","_id":"cjb96s5jk0006zoxpcwrkqgpl"},{"post_id":"cjb96s5jf0003zoxpit579zzp","tag_id":"cjb96s5jk0005zoxpxi9td18h","_id":"cjb96s5jl0007zoxp8a15wmmg"},{"post_id":"cjb96s5po0008zoxp3v0ncm6l","tag_id":"cjb96s5jh0004zoxpqe1k8bzr","_id":"cjb96s5pr000azoxpva1ftol4"},{"post_id":"cjb96s5pr000bzoxpoto7kpnh","tag_id":"cjb96s5jh0004zoxpqe1k8bzr","_id":"cjb96s5pt000ezoxp210qzabw"},{"post_id":"cjb96s5pq0009zoxpj0oyzqpe","tag_id":"cjb96s5ps000czoxpb2574wz4","_id":"cjb96s5pw000izoxpqtt0xidu"},{"post_id":"cjb96s5ps000dzoxptm66k8ss","tag_id":"cjb96s5pw000hzoxp4upst2b1","_id":"cjb96s5py000lzoxpekd3fptf"},{"post_id":"cjb96s5pu000fzoxpy2895y9w","tag_id":"cjb96s5py000kzoxpdgmdd7ro","_id":"cjb96s5pz000ozoxpsfeb5qu6"},{"post_id":"cjb96s5pu000fzoxpy2895y9w","tag_id":"cjb96s5py000mzoxpor085xja","_id":"cjb96s5pz000pzoxp8qh8cnxs"},{"post_id":"cjb96s5pv000gzoxpi1a34suv","tag_id":"cjb96s5pz000nzoxpqo0uo9lc","_id":"cjb96s5pz000rzoxpp10o8r73"},{"post_id":"cjb96s5px000jzoxpjvuq0nzf","tag_id":"cjb96s5pz000qzoxpyrsgibdr","_id":"cjb96s5pz000szoxpofnwc9sw"}],"Tag":[{"name":"hexo","_id":"cjb96s5jh0004zoxpqe1k8bzr"},{"name":"sublime","_id":"cjb96s5jk0005zoxpxi9td18h"},{"name":"gulp","_id":"cjb96s5ps000czoxpb2574wz4"},{"name":"javascript","_id":"cjb96s5pw000hzoxp4upst2b1"},{"name":"sbulime","_id":"cjb96s5py000kzoxpdgmdd7ro"},{"name":"插件","_id":"cjb96s5py000mzoxpor085xja"},{"name":"工具","_id":"cjb96s5pz000nzoxpqo0uo9lc"},{"name":"vpn","_id":"cjb96s5pz000qzoxpyrsgibdr"}]}}